// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: push.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Audience_PushTag_TagOpt int32

const (
	Audience_PushTag_OR  Audience_PushTag_TagOpt = 0
	Audience_PushTag_AND Audience_PushTag_TagOpt = 1
	Audience_PushTag_NOT Audience_PushTag_TagOpt = 2
)

// Enum value maps for Audience_PushTag_TagOpt.
var (
	Audience_PushTag_TagOpt_name = map[int32]string{
		0: "OR",
		1: "AND",
		2: "NOT",
	}
	Audience_PushTag_TagOpt_value = map[string]int32{
		"OR":  0,
		"AND": 1,
		"NOT": 2,
	}
)

func (x Audience_PushTag_TagOpt) Enum() *Audience_PushTag_TagOpt {
	p := new(Audience_PushTag_TagOpt)
	*p = x
	return p
}

func (x Audience_PushTag_TagOpt) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Audience_PushTag_TagOpt) Descriptor() protoreflect.EnumDescriptor {
	return file_push_proto_enumTypes[0].Descriptor()
}

func (Audience_PushTag_TagOpt) Type() protoreflect.EnumType {
	return &file_push_proto_enumTypes[0]
}

func (x Audience_PushTag_TagOpt) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Audience_PushTag_TagOpt.Descriptor instead.
func (Audience_PushTag_TagOpt) EnumDescriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{0, 0, 0}
}

type Audience struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CidList   []string            `protobuf:"bytes,1,rep,name=cid_list,json=cidList,proto3" json:"cid_list,omitempty"`
	AliasList []string            `protobuf:"bytes,2,rep,name=alias_list,json=aliasList,proto3" json:"alias_list,omitempty"`
	TagList   []*Audience_PushTag `protobuf:"bytes,3,rep,name=tag_list,json=tagList,proto3" json:"tag_list,omitempty"`
	FastTag   string              `protobuf:"bytes,4,opt,name=fast_tag,json=fastTag,proto3" json:"fast_tag,omitempty"`
}

func (x *Audience) Reset() {
	*x = Audience{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Audience) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Audience) ProtoMessage() {}

func (x *Audience) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Audience.ProtoReflect.Descriptor instead.
func (*Audience) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{0}
}

func (x *Audience) GetCidList() []string {
	if x != nil {
		return x.CidList
	}
	return nil
}

func (x *Audience) GetAliasList() []string {
	if x != nil {
		return x.AliasList
	}
	return nil
}

func (x *Audience) GetTagList() []*Audience_PushTag {
	if x != nil {
		return x.TagList
	}
	return nil
}

func (x *Audience) GetFastTag() string {
	if x != nil {
		return x.FastTag
	}
	return ""
}

type Settings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TtlMillisecond       int64              `protobuf:"varint,1,opt,name=ttl_millisecond,json=ttlMillisecond,proto3" json:"ttl_millisecond,omitempty"`
	Strategy             *Settings_Strategy `protobuf:"bytes,2,opt,name=strategy,proto3" json:"strategy,omitempty"`
	Speed                int64              `protobuf:"varint,3,opt,name=speed,proto3" json:"speed,omitempty"`
	ScheduledMillisecond int64              `protobuf:"varint,4,opt,name=scheduled_millisecond,json=scheduledMillisecond,proto3" json:"scheduled_millisecond,omitempty"`
}

func (x *Settings) Reset() {
	*x = Settings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Settings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Settings) ProtoMessage() {}

func (x *Settings) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Settings.ProtoReflect.Descriptor instead.
func (*Settings) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{1}
}

func (x *Settings) GetTtlMillisecond() int64 {
	if x != nil {
		return x.TtlMillisecond
	}
	return 0
}

func (x *Settings) GetStrategy() *Settings_Strategy {
	if x != nil {
		return x.Strategy
	}
	return nil
}

func (x *Settings) GetSpeed() int64 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *Settings) GetScheduledMillisecond() int64 {
	if x != nil {
		return x.ScheduledMillisecond
	}
	return 0
}

type Notification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title        string                `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Body         string                `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	BigText      string                `protobuf:"bytes,3,opt,name=big_text,json=bigText,proto3" json:"big_text,omitempty"`
	BigImage     string                `protobuf:"bytes,4,opt,name=big_image,json=bigImage,proto3" json:"big_image,omitempty"`
	Logo         string                `protobuf:"bytes,5,opt,name=logo,proto3" json:"logo,omitempty"`
	LogoUrl      string                `protobuf:"bytes,6,opt,name=logo_url,json=logoUrl,proto3" json:"logo_url,omitempty"`
	ChannelId    string                `protobuf:"bytes,7,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	ChannelName  string                `protobuf:"bytes,8,opt,name=channel_name,json=channelName,proto3" json:"channel_name,omitempty"`
	ChannelLevel string                `protobuf:"bytes,9,opt,name=channel_level,json=channelLevel,proto3" json:"channel_level,omitempty"`
	ClickType    string                `protobuf:"bytes,10,opt,name=click_type,json=clickType,proto3" json:"click_type,omitempty"`
	Intent       string                `protobuf:"bytes,11,opt,name=intent,proto3" json:"intent,omitempty"`
	JumpUrl      string                `protobuf:"bytes,12,opt,name=jump_url,json=jumpUrl,proto3" json:"jump_url,omitempty"`
	Payload      string                `protobuf:"bytes,13,opt,name=payload,proto3" json:"payload,omitempty"`
	NotifyId     int64                 `protobuf:"varint,14,opt,name=notifyId,proto3" json:"notifyId,omitempty"`
	RingName     string                `protobuf:"bytes,15,opt,name=ring_name,json=ringName,proto3" json:"ring_name,omitempty"`
	BadgeAddNum  int32                 `protobuf:"varint,16,opt,name=badge_add_num,json=badgeAddNum,proto3" json:"badge_add_num,omitempty"`
	Options      *Notification_Options `protobuf:"bytes,17,opt,name=options,proto3" json:"options,omitempty"`
}

func (x *Notification) Reset() {
	*x = Notification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Notification) ProtoMessage() {}

func (x *Notification) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Notification.ProtoReflect.Descriptor instead.
func (*Notification) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{2}
}

func (x *Notification) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Notification) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *Notification) GetBigText() string {
	if x != nil {
		return x.BigText
	}
	return ""
}

func (x *Notification) GetBigImage() string {
	if x != nil {
		return x.BigImage
	}
	return ""
}

func (x *Notification) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

func (x *Notification) GetLogoUrl() string {
	if x != nil {
		return x.LogoUrl
	}
	return ""
}

func (x *Notification) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *Notification) GetChannelName() string {
	if x != nil {
		return x.ChannelName
	}
	return ""
}

func (x *Notification) GetChannelLevel() string {
	if x != nil {
		return x.ChannelLevel
	}
	return ""
}

func (x *Notification) GetClickType() string {
	if x != nil {
		return x.ClickType
	}
	return ""
}

func (x *Notification) GetIntent() string {
	if x != nil {
		return x.Intent
	}
	return ""
}

func (x *Notification) GetJumpUrl() string {
	if x != nil {
		return x.JumpUrl
	}
	return ""
}

func (x *Notification) GetPayload() string {
	if x != nil {
		return x.Payload
	}
	return ""
}

func (x *Notification) GetNotifyId() int64 {
	if x != nil {
		return x.NotifyId
	}
	return 0
}

func (x *Notification) GetRingName() string {
	if x != nil {
		return x.RingName
	}
	return ""
}

func (x *Notification) GetBadgeAddNum() int32 {
	if x != nil {
		return x.BadgeAddNum
	}
	return 0
}

func (x *Notification) GetOptions() *Notification_Options {
	if x != nil {
		return x.Options
	}
	return nil
}

type Revoke struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OldTaskId string `protobuf:"bytes,1,opt,name=old_task_id,json=oldTaskId,proto3" json:"old_task_id,omitempty"`
	Force     bool   `protobuf:"varint,2,opt,name=force,proto3" json:"force,omitempty"`
}

func (x *Revoke) Reset() {
	*x = Revoke{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Revoke) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Revoke) ProtoMessage() {}

func (x *Revoke) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Revoke.ProtoReflect.Descriptor instead.
func (*Revoke) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{3}
}

func (x *Revoke) GetOldTaskId() string {
	if x != nil {
		return x.OldTaskId
	}
	return ""
}

func (x *Revoke) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

type PushMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Duration     string        `protobuf:"bytes,1,opt,name=duration,proto3" json:"duration,omitempty"`
	Notification *Notification `protobuf:"bytes,2,opt,name=notification,proto3" json:"notification,omitempty"`
	Transmission string        `protobuf:"bytes,3,opt,name=transmission,proto3" json:"transmission,omitempty"`
	Revoke       *Revoke       `protobuf:"bytes,4,opt,name=revoke,proto3" json:"revoke,omitempty"`
}

func (x *PushMessage) Reset() {
	*x = PushMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushMessage) ProtoMessage() {}

func (x *PushMessage) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushMessage.ProtoReflect.Descriptor instead.
func (*PushMessage) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{4}
}

func (x *PushMessage) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

func (x *PushMessage) GetNotification() *Notification {
	if x != nil {
		return x.Notification
	}
	return nil
}

func (x *PushMessage) GetTransmission() string {
	if x != nil {
		return x.Transmission
	}
	return ""
}

func (x *PushMessage) GetRevoke() *Revoke {
	if x != nil {
		return x.Revoke
	}
	return nil
}

type IosChannel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type           string                   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Aps            *IosChannel_Aps          `protobuf:"bytes,2,opt,name=aps,proto3" json:"aps,omitempty"`
	AutoBadge      string                   `protobuf:"bytes,3,opt,name=auto_badge,json=autoBadge,proto3" json:"auto_badge,omitempty"`
	Payload        string                   `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"`
	MultimediaList []*IosChannel_Multimedia `protobuf:"bytes,5,rep,name=multimedia_list,json=multimediaList,proto3" json:"multimedia_list,omitempty"`
	ApnsCollapseId string                   `protobuf:"bytes,6,opt,name=apns_collapse_id,json=apnsCollapseId,proto3" json:"apns_collapse_id,omitempty"`
}

func (x *IosChannel) Reset() {
	*x = IosChannel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IosChannel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IosChannel) ProtoMessage() {}

func (x *IosChannel) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IosChannel.ProtoReflect.Descriptor instead.
func (*IosChannel) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{5}
}

func (x *IosChannel) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *IosChannel) GetAps() *IosChannel_Aps {
	if x != nil {
		return x.Aps
	}
	return nil
}

func (x *IosChannel) GetAutoBadge() string {
	if x != nil {
		return x.AutoBadge
	}
	return ""
}

func (x *IosChannel) GetPayload() string {
	if x != nil {
		return x.Payload
	}
	return ""
}

func (x *IosChannel) GetMultimediaList() []*IosChannel_Multimedia {
	if x != nil {
		return x.MultimediaList
	}
	return nil
}

func (x *IosChannel) GetApnsCollapseId() string {
	if x != nil {
		return x.ApnsCollapseId
	}
	return ""
}

type AndroidChannel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ups *AndroidChannel_Ups `protobuf:"bytes,1,opt,name=ups,proto3" json:"ups,omitempty"`
}

func (x *AndroidChannel) Reset() {
	*x = AndroidChannel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AndroidChannel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AndroidChannel) ProtoMessage() {}

func (x *AndroidChannel) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AndroidChannel.ProtoReflect.Descriptor instead.
func (*AndroidChannel) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{6}
}

func (x *AndroidChannel) GetUps() *AndroidChannel_Ups {
	if x != nil {
		return x.Ups
	}
	return nil
}

type PushChannel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ios     *IosChannel     `protobuf:"bytes,1,opt,name=ios,proto3" json:"ios,omitempty"`
	Android *AndroidChannel `protobuf:"bytes,2,opt,name=android,proto3" json:"android,omitempty"`
}

func (x *PushChannel) Reset() {
	*x = PushChannel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushChannel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushChannel) ProtoMessage() {}

func (x *PushChannel) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushChannel.ProtoReflect.Descriptor instead.
func (*PushChannel) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{7}
}

func (x *PushChannel) GetIos() *IosChannel {
	if x != nil {
		return x.Ios
	}
	return nil
}

func (x *PushChannel) GetAndroid() *AndroidChannel {
	if x != nil {
		return x.Android
	}
	return nil
}

type PushToSingleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PushAgent   string                           `protobuf:"bytes,1,opt,name=push_agent,json=pushAgent,proto3" json:"push_agent,omitempty"`
	BundleId    string                           `protobuf:"bytes,2,opt,name=bundle_id,json=bundleId,proto3" json:"bundle_id,omitempty"`
	MessageList []*PushToSingleReq_SingleMessage `protobuf:"bytes,3,rep,name=message_list,json=messageList,proto3" json:"message_list,omitempty"`
	IsAsync     bool                             `protobuf:"varint,4,opt,name=is_async,json=isAsync,proto3" json:"is_async,omitempty"`
}

func (x *PushToSingleReq) Reset() {
	*x = PushToSingleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushToSingleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushToSingleReq) ProtoMessage() {}

func (x *PushToSingleReq) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushToSingleReq.ProtoReflect.Descriptor instead.
func (*PushToSingleReq) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{8}
}

func (x *PushToSingleReq) GetPushAgent() string {
	if x != nil {
		return x.PushAgent
	}
	return ""
}

func (x *PushToSingleReq) GetBundleId() string {
	if x != nil {
		return x.BundleId
	}
	return ""
}

func (x *PushToSingleReq) GetMessageList() []*PushToSingleReq_SingleMessage {
	if x != nil {
		return x.MessageList
	}
	return nil
}

func (x *PushToSingleReq) GetIsAsync() bool {
	if x != nil {
		return x.IsAsync
	}
	return false
}

type Receipt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId     string            `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	DetailList []*Receipt_Detail `protobuf:"bytes,2,rep,name=detail_list,json=detailList,proto3" json:"detail_list,omitempty"`
}

func (x *Receipt) Reset() {
	*x = Receipt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Receipt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Receipt) ProtoMessage() {}

func (x *Receipt) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Receipt.ProtoReflect.Descriptor instead.
func (*Receipt) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{9}
}

func (x *Receipt) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *Receipt) GetDetailList() []*Receipt_Detail {
	if x != nil {
		return x.DetailList
	}
	return nil
}

type PushToSingleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReceiptList []*Receipt `protobuf:"bytes,1,rep,name=receipt_list,json=receiptList,proto3" json:"receipt_list,omitempty"`
}

func (x *PushToSingleResp) Reset() {
	*x = PushToSingleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushToSingleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushToSingleResp) ProtoMessage() {}

func (x *PushToSingleResp) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushToSingleResp.ProtoReflect.Descriptor instead.
func (*PushToSingleResp) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{10}
}

func (x *PushToSingleResp) GetReceiptList() []*Receipt {
	if x != nil {
		return x.ReceiptList
	}
	return nil
}

type CreateTaskReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PushAgent string                     `protobuf:"bytes,1,opt,name=push_agent,json=pushAgent,proto3" json:"push_agent,omitempty"`
	BundleId  string                     `protobuf:"bytes,2,opt,name=bundle_id,json=bundleId,proto3" json:"bundle_id,omitempty"`
	Message   *CreateTaskReq_ListMessage `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CreateTaskReq) Reset() {
	*x = CreateTaskReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTaskReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTaskReq) ProtoMessage() {}

func (x *CreateTaskReq) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTaskReq.ProtoReflect.Descriptor instead.
func (*CreateTaskReq) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{11}
}

func (x *CreateTaskReq) GetPushAgent() string {
	if x != nil {
		return x.PushAgent
	}
	return ""
}

func (x *CreateTaskReq) GetBundleId() string {
	if x != nil {
		return x.BundleId
	}
	return ""
}

func (x *CreateTaskReq) GetMessage() *CreateTaskReq_ListMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

type CreateTaskResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId string `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
}

func (x *CreateTaskResp) Reset() {
	*x = CreateTaskResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTaskResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTaskResp) ProtoMessage() {}

func (x *CreateTaskResp) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTaskResp.ProtoReflect.Descriptor instead.
func (*CreateTaskResp) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{12}
}

func (x *CreateTaskResp) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

type PushToListRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PushAgent string    `protobuf:"bytes,1,opt,name=push_agent,json=pushAgent,proto3" json:"push_agent,omitempty"`
	BundleId  string    `protobuf:"bytes,2,opt,name=bundle_id,json=bundleId,proto3" json:"bundle_id,omitempty"`
	Audience  *Audience `protobuf:"bytes,3,opt,name=audience,proto3" json:"audience,omitempty"`
	TaskId    string    `protobuf:"bytes,4,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	IsAsync   bool      `protobuf:"varint,5,opt,name=is_async,json=isAsync,proto3" json:"is_async,omitempty"`
}

func (x *PushToListRep) Reset() {
	*x = PushToListRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushToListRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushToListRep) ProtoMessage() {}

func (x *PushToListRep) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushToListRep.ProtoReflect.Descriptor instead.
func (*PushToListRep) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{13}
}

func (x *PushToListRep) GetPushAgent() string {
	if x != nil {
		return x.PushAgent
	}
	return ""
}

func (x *PushToListRep) GetBundleId() string {
	if x != nil {
		return x.BundleId
	}
	return ""
}

func (x *PushToListRep) GetAudience() *Audience {
	if x != nil {
		return x.Audience
	}
	return nil
}

func (x *PushToListRep) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *PushToListRep) GetIsAsync() bool {
	if x != nil {
		return x.IsAsync
	}
	return false
}

type PushToListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Receipt *Receipt `protobuf:"bytes,1,opt,name=receipt,proto3" json:"receipt,omitempty"`
}

func (x *PushToListResp) Reset() {
	*x = PushToListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushToListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushToListResp) ProtoMessage() {}

func (x *PushToListResp) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushToListResp.ProtoReflect.Descriptor instead.
func (*PushToListResp) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{14}
}

func (x *PushToListResp) GetReceipt() *Receipt {
	if x != nil {
		return x.Receipt
	}
	return nil
}

type PushToAppReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PushAgent string                   `protobuf:"bytes,1,opt,name=push_agent,json=pushAgent,proto3" json:"push_agent,omitempty"`
	BundleId  string                   `protobuf:"bytes,2,opt,name=bundle_id,json=bundleId,proto3" json:"bundle_id,omitempty"`
	Message   *PushToAppReq_AppMessage `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *PushToAppReq) Reset() {
	*x = PushToAppReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushToAppReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushToAppReq) ProtoMessage() {}

func (x *PushToAppReq) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushToAppReq.ProtoReflect.Descriptor instead.
func (*PushToAppReq) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{15}
}

func (x *PushToAppReq) GetPushAgent() string {
	if x != nil {
		return x.PushAgent
	}
	return ""
}

func (x *PushToAppReq) GetBundleId() string {
	if x != nil {
		return x.BundleId
	}
	return ""
}

func (x *PushToAppReq) GetMessage() *PushToAppReq_AppMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

type PushToAppResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId string `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
}

func (x *PushToAppResp) Reset() {
	*x = PushToAppResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushToAppResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushToAppResp) ProtoMessage() {}

func (x *PushToAppResp) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushToAppResp.ProtoReflect.Descriptor instead.
func (*PushToAppResp) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{16}
}

func (x *PushToAppResp) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

type StopTaskReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PushAgent string `protobuf:"bytes,1,opt,name=push_agent,json=pushAgent,proto3" json:"push_agent,omitempty"`
	BundleId  string `protobuf:"bytes,2,opt,name=bundle_id,json=bundleId,proto3" json:"bundle_id,omitempty"`
	TaskId    string `protobuf:"bytes,3,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
}

func (x *StopTaskReq) Reset() {
	*x = StopTaskReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopTaskReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopTaskReq) ProtoMessage() {}

func (x *StopTaskReq) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopTaskReq.ProtoReflect.Descriptor instead.
func (*StopTaskReq) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{17}
}

func (x *StopTaskReq) GetPushAgent() string {
	if x != nil {
		return x.PushAgent
	}
	return ""
}

func (x *StopTaskReq) GetBundleId() string {
	if x != nil {
		return x.BundleId
	}
	return ""
}

func (x *StopTaskReq) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

type StopTaskResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *StopTaskResp) Reset() {
	*x = StopTaskResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopTaskResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopTaskResp) ProtoMessage() {}

func (x *StopTaskResp) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopTaskResp.ProtoReflect.Descriptor instead.
func (*StopTaskResp) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{18}
}

func (x *StopTaskResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type CheckTaskReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PushAgent string `protobuf:"bytes,1,opt,name=push_agent,json=pushAgent,proto3" json:"push_agent,omitempty"`
	BundleId  string `protobuf:"bytes,2,opt,name=bundle_id,json=bundleId,proto3" json:"bundle_id,omitempty"`
	TaskId    string `protobuf:"bytes,3,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
}

func (x *CheckTaskReq) Reset() {
	*x = CheckTaskReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckTaskReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckTaskReq) ProtoMessage() {}

func (x *CheckTaskReq) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckTaskReq.ProtoReflect.Descriptor instead.
func (*CheckTaskReq) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{19}
}

func (x *CheckTaskReq) GetPushAgent() string {
	if x != nil {
		return x.PushAgent
	}
	return ""
}

func (x *CheckTaskReq) GetBundleId() string {
	if x != nil {
		return x.BundleId
	}
	return ""
}

func (x *CheckTaskReq) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

type CheckTaskResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId              string `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	CreateTime          int64  `protobuf:"varint,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	Status              string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	TransmissionContent string `protobuf:"bytes,4,opt,name=transmission_content,json=transmissionContent,proto3" json:"transmission_content,omitempty"`
	PushTime            int64  `protobuf:"varint,5,opt,name=push_time,json=pushTime,proto3" json:"push_time,omitempty"`
}

func (x *CheckTaskResp) Reset() {
	*x = CheckTaskResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckTaskResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckTaskResp) ProtoMessage() {}

func (x *CheckTaskResp) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckTaskResp.ProtoReflect.Descriptor instead.
func (*CheckTaskResp) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{20}
}

func (x *CheckTaskResp) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *CheckTaskResp) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *CheckTaskResp) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CheckTaskResp) GetTransmissionContent() string {
	if x != nil {
		return x.TransmissionContent
	}
	return ""
}

func (x *CheckTaskResp) GetPushTime() int64 {
	if x != nil {
		return x.PushTime
	}
	return 0
}

type RemoveTaskReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PushAgent string `protobuf:"bytes,1,opt,name=push_agent,json=pushAgent,proto3" json:"push_agent,omitempty"`
	BundleId  string `protobuf:"bytes,2,opt,name=bundle_id,json=bundleId,proto3" json:"bundle_id,omitempty"`
	TaskId    string `protobuf:"bytes,3,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
}

func (x *RemoveTaskReq) Reset() {
	*x = RemoveTaskReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveTaskReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveTaskReq) ProtoMessage() {}

func (x *RemoveTaskReq) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveTaskReq.ProtoReflect.Descriptor instead.
func (*RemoveTaskReq) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{21}
}

func (x *RemoveTaskReq) GetPushAgent() string {
	if x != nil {
		return x.PushAgent
	}
	return ""
}

func (x *RemoveTaskReq) GetBundleId() string {
	if x != nil {
		return x.BundleId
	}
	return ""
}

func (x *RemoveTaskReq) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

type RemoveTaskResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *RemoveTaskResp) Reset() {
	*x = RemoveTaskResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveTaskResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveTaskResp) ProtoMessage() {}

func (x *RemoveTaskResp) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveTaskResp.ProtoReflect.Descriptor instead.
func (*RemoveTaskResp) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{22}
}

func (x *RemoveTaskResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ViewDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PushAgent string `protobuf:"bytes,1,opt,name=push_agent,json=pushAgent,proto3" json:"push_agent,omitempty"`
	BundleId  string `protobuf:"bytes,2,opt,name=bundle_id,json=bundleId,proto3" json:"bundle_id,omitempty"`
	TaskId    string `protobuf:"bytes,3,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Cid       string `protobuf:"bytes,4,opt,name=cid,proto3" json:"cid,omitempty"`
}

func (x *ViewDetailReq) Reset() {
	*x = ViewDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewDetailReq) ProtoMessage() {}

func (x *ViewDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewDetailReq.ProtoReflect.Descriptor instead.
func (*ViewDetailReq) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{23}
}

func (x *ViewDetailReq) GetPushAgent() string {
	if x != nil {
		return x.PushAgent
	}
	return ""
}

func (x *ViewDetailReq) GetBundleId() string {
	if x != nil {
		return x.BundleId
	}
	return ""
}

func (x *ViewDetailReq) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *ViewDetailReq) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

type ViewDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DetailList []*ViewDetailResp_Detail `protobuf:"bytes,1,rep,name=detail_list,json=detailList,proto3" json:"detail_list,omitempty"`
}

func (x *ViewDetailResp) Reset() {
	*x = ViewDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewDetailResp) ProtoMessage() {}

func (x *ViewDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewDetailResp.ProtoReflect.Descriptor instead.
func (*ViewDetailResp) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{24}
}

func (x *ViewDetailResp) GetDetailList() []*ViewDetailResp_Detail {
	if x != nil {
		return x.DetailList
	}
	return nil
}

type Audience_PushTag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key       string                  `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	ValueList string                  `protobuf:"bytes,2,opt,name=value_list,json=valueList,proto3" json:"value_list,omitempty"`
	OptType   Audience_PushTag_TagOpt `protobuf:"varint,3,opt,name=opt_type,json=optType,proto3,enum=OfflinePush.Push.Audience_PushTag_TagOpt" json:"opt_type,omitempty"`
}

func (x *Audience_PushTag) Reset() {
	*x = Audience_PushTag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Audience_PushTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Audience_PushTag) ProtoMessage() {}

func (x *Audience_PushTag) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Audience_PushTag.ProtoReflect.Descriptor instead.
func (*Audience_PushTag) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Audience_PushTag) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Audience_PushTag) GetValueList() string {
	if x != nil {
		return x.ValueList
	}
	return ""
}

func (x *Audience_PushTag) GetOptType() Audience_PushTag_TagOpt {
	if x != nil {
		return x.OptType
	}
	return Audience_PushTag_OR
}

type Settings_Strategy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Default int32 `protobuf:"varint,1,opt,name=default,proto3" json:"default,omitempty"`
	Ios     int32 `protobuf:"varint,2,opt,name=ios,proto3" json:"ios,omitempty"`
	St      int32 `protobuf:"varint,3,opt,name=st,proto3" json:"st,omitempty"`
	Hw      int32 `protobuf:"varint,4,opt,name=hw,proto3" json:"hw,omitempty"`
	Xm      int32 `protobuf:"varint,5,opt,name=xm,proto3" json:"xm,omitempty"`
	Vv      int32 `protobuf:"varint,6,opt,name=vv,proto3" json:"vv,omitempty"`
	Op      int32 `protobuf:"varint,7,opt,name=op,proto3" json:"op,omitempty"`
}

func (x *Settings_Strategy) Reset() {
	*x = Settings_Strategy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Settings_Strategy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Settings_Strategy) ProtoMessage() {}

func (x *Settings_Strategy) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Settings_Strategy.ProtoReflect.Descriptor instead.
func (*Settings_Strategy) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{1, 0}
}

func (x *Settings_Strategy) GetDefault() int32 {
	if x != nil {
		return x.Default
	}
	return 0
}

func (x *Settings_Strategy) GetIos() int32 {
	if x != nil {
		return x.Ios
	}
	return 0
}

func (x *Settings_Strategy) GetSt() int32 {
	if x != nil {
		return x.St
	}
	return 0
}

func (x *Settings_Strategy) GetHw() int32 {
	if x != nil {
		return x.Hw
	}
	return 0
}

func (x *Settings_Strategy) GetXm() int32 {
	if x != nil {
		return x.Xm
	}
	return 0
}

func (x *Settings_Strategy) GetVv() int32 {
	if x != nil {
		return x.Vv
	}
	return 0
}

func (x *Settings_Strategy) GetOp() int32 {
	if x != nil {
		return x.Op
	}
	return 0
}

type Notification_Options struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Constraint string `protobuf:"bytes,1,opt,name=constraint,proto3" json:"constraint,omitempty"`
	Key        string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Value      string `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Notification_Options) Reset() {
	*x = Notification_Options{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Notification_Options) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Notification_Options) ProtoMessage() {}

func (x *Notification_Options) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Notification_Options.ProtoReflect.Descriptor instead.
func (*Notification_Options) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{2, 0}
}

func (x *Notification_Options) GetConstraint() string {
	if x != nil {
		return x.Constraint
	}
	return ""
}

func (x *Notification_Options) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Notification_Options) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type IosChannel_Aps struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alert            *IosChannel_Aps_Alert `protobuf:"bytes,1,opt,name=alert,proto3" json:"alert,omitempty"`
	ContentAvailable int32                 `protobuf:"varint,2,opt,name=content_available,json=contentAvailable,proto3" json:"content_available,omitempty"`
	Sound            string                `protobuf:"bytes,3,opt,name=sound,proto3" json:"sound,omitempty"`
	Category         string                `protobuf:"bytes,4,opt,name=category,proto3" json:"category,omitempty"`
	ThreadId         string                `protobuf:"bytes,5,opt,name=thread_id,json=threadId,proto3" json:"thread_id,omitempty"`
}

func (x *IosChannel_Aps) Reset() {
	*x = IosChannel_Aps{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IosChannel_Aps) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IosChannel_Aps) ProtoMessage() {}

func (x *IosChannel_Aps) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IosChannel_Aps.ProtoReflect.Descriptor instead.
func (*IosChannel_Aps) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{5, 0}
}

func (x *IosChannel_Aps) GetAlert() *IosChannel_Aps_Alert {
	if x != nil {
		return x.Alert
	}
	return nil
}

func (x *IosChannel_Aps) GetContentAvailable() int32 {
	if x != nil {
		return x.ContentAvailable
	}
	return 0
}

func (x *IosChannel_Aps) GetSound() string {
	if x != nil {
		return x.Sound
	}
	return ""
}

func (x *IosChannel_Aps) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *IosChannel_Aps) GetThreadId() string {
	if x != nil {
		return x.ThreadId
	}
	return ""
}

type IosChannel_Multimedia struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url      string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Type     int32  `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	OnlyWifi bool   `protobuf:"varint,3,opt,name=only_wifi,json=onlyWifi,proto3" json:"only_wifi,omitempty"`
}

func (x *IosChannel_Multimedia) Reset() {
	*x = IosChannel_Multimedia{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IosChannel_Multimedia) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IosChannel_Multimedia) ProtoMessage() {}

func (x *IosChannel_Multimedia) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IosChannel_Multimedia.ProtoReflect.Descriptor instead.
func (*IosChannel_Multimedia) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{5, 1}
}

func (x *IosChannel_Multimedia) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *IosChannel_Multimedia) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *IosChannel_Multimedia) GetOnlyWifi() bool {
	if x != nil {
		return x.OnlyWifi
	}
	return false
}

type IosChannel_Aps_Alert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title           string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Body            string   `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	ActionLocKey    string   `protobuf:"bytes,3,opt,name=action_loc_key,json=actionLocKey,proto3" json:"action_loc_key,omitempty"`
	LocKey          string   `protobuf:"bytes,4,opt,name=loc_key,json=locKey,proto3" json:"loc_key,omitempty"`
	LocArgs         []string `protobuf:"bytes,5,rep,name=loc_args,json=locArgs,proto3" json:"loc_args,omitempty"`
	LaunchImage     string   `protobuf:"bytes,6,opt,name=launch_image,json=launchImage,proto3" json:"launch_image,omitempty"`
	TitleLocKey     string   `protobuf:"bytes,7,opt,name=title_loc_key,json=titleLocKey,proto3" json:"title_loc_key,omitempty"`
	TitleLocArgs    []string `protobuf:"bytes,8,rep,name=title_loc_args,json=titleLocArgs,proto3" json:"title_loc_args,omitempty"`
	SubTitle        string   `protobuf:"bytes,9,opt,name=sub_title,json=subTitle,proto3" json:"sub_title,omitempty"`
	SubTitleLocKey  string   `protobuf:"bytes,10,opt,name=sub_title_loc_key,json=subTitleLocKey,proto3" json:"sub_title_loc_key,omitempty"`
	SubTitleLocArgs []string `protobuf:"bytes,11,rep,name=sub_title_loc_args,json=subTitleLocArgs,proto3" json:"sub_title_loc_args,omitempty"`
}

func (x *IosChannel_Aps_Alert) Reset() {
	*x = IosChannel_Aps_Alert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IosChannel_Aps_Alert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IosChannel_Aps_Alert) ProtoMessage() {}

func (x *IosChannel_Aps_Alert) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IosChannel_Aps_Alert.ProtoReflect.Descriptor instead.
func (*IosChannel_Aps_Alert) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{5, 0, 0}
}

func (x *IosChannel_Aps_Alert) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *IosChannel_Aps_Alert) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *IosChannel_Aps_Alert) GetActionLocKey() string {
	if x != nil {
		return x.ActionLocKey
	}
	return ""
}

func (x *IosChannel_Aps_Alert) GetLocKey() string {
	if x != nil {
		return x.LocKey
	}
	return ""
}

func (x *IosChannel_Aps_Alert) GetLocArgs() []string {
	if x != nil {
		return x.LocArgs
	}
	return nil
}

func (x *IosChannel_Aps_Alert) GetLaunchImage() string {
	if x != nil {
		return x.LaunchImage
	}
	return ""
}

func (x *IosChannel_Aps_Alert) GetTitleLocKey() string {
	if x != nil {
		return x.TitleLocKey
	}
	return ""
}

func (x *IosChannel_Aps_Alert) GetTitleLocArgs() []string {
	if x != nil {
		return x.TitleLocArgs
	}
	return nil
}

func (x *IosChannel_Aps_Alert) GetSubTitle() string {
	if x != nil {
		return x.SubTitle
	}
	return ""
}

func (x *IosChannel_Aps_Alert) GetSubTitleLocKey() string {
	if x != nil {
		return x.SubTitleLocKey
	}
	return ""
}

func (x *IosChannel_Aps_Alert) GetSubTitleLocArgs() []string {
	if x != nil {
		return x.SubTitleLocArgs
	}
	return nil
}

type AndroidChannel_Ups struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Notification *Notification `protobuf:"bytes,1,opt,name=notification,proto3" json:"notification,omitempty"`
	Transmission string        `protobuf:"bytes,2,opt,name=transmission,proto3" json:"transmission,omitempty"`
}

func (x *AndroidChannel_Ups) Reset() {
	*x = AndroidChannel_Ups{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AndroidChannel_Ups) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AndroidChannel_Ups) ProtoMessage() {}

func (x *AndroidChannel_Ups) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AndroidChannel_Ups.ProtoReflect.Descriptor instead.
func (*AndroidChannel_Ups) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{6, 0}
}

func (x *AndroidChannel_Ups) GetNotification() *Notification {
	if x != nil {
		return x.Notification
	}
	return nil
}

func (x *AndroidChannel_Ups) GetTransmission() string {
	if x != nil {
		return x.Transmission
	}
	return ""
}

type PushToSingleReq_SingleMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId string       `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Audience  *Audience    `protobuf:"bytes,2,opt,name=audience,proto3" json:"audience,omitempty"`
	Settings  *Settings    `protobuf:"bytes,3,opt,name=settings,proto3" json:"settings,omitempty"`
	Message   *PushMessage `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	Channel   *PushChannel `protobuf:"bytes,5,opt,name=channel,proto3" json:"channel,omitempty"`
}

func (x *PushToSingleReq_SingleMessage) Reset() {
	*x = PushToSingleReq_SingleMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushToSingleReq_SingleMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushToSingleReq_SingleMessage) ProtoMessage() {}

func (x *PushToSingleReq_SingleMessage) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushToSingleReq_SingleMessage.ProtoReflect.Descriptor instead.
func (*PushToSingleReq_SingleMessage) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{8, 0}
}

func (x *PushToSingleReq_SingleMessage) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *PushToSingleReq_SingleMessage) GetAudience() *Audience {
	if x != nil {
		return x.Audience
	}
	return nil
}

func (x *PushToSingleReq_SingleMessage) GetSettings() *Settings {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *PushToSingleReq_SingleMessage) GetMessage() *PushMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *PushToSingleReq_SingleMessage) GetChannel() *PushChannel {
	if x != nil {
		return x.Channel
	}
	return nil
}

type Receipt_Detail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid    string `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
	Status string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *Receipt_Detail) Reset() {
	*x = Receipt_Detail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Receipt_Detail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Receipt_Detail) ProtoMessage() {}

func (x *Receipt_Detail) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Receipt_Detail.ProtoReflect.Descriptor instead.
func (*Receipt_Detail) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{9, 0}
}

func (x *Receipt_Detail) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *Receipt_Detail) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type CreateTaskReq_ListMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId string       `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	GroupName string       `protobuf:"bytes,2,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
	Settings  *Settings    `protobuf:"bytes,3,opt,name=settings,proto3" json:"settings,omitempty"`
	Message   *PushMessage `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	Channel   *PushChannel `protobuf:"bytes,5,opt,name=channel,proto3" json:"channel,omitempty"`
}

func (x *CreateTaskReq_ListMessage) Reset() {
	*x = CreateTaskReq_ListMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTaskReq_ListMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTaskReq_ListMessage) ProtoMessage() {}

func (x *CreateTaskReq_ListMessage) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTaskReq_ListMessage.ProtoReflect.Descriptor instead.
func (*CreateTaskReq_ListMessage) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{11, 0}
}

func (x *CreateTaskReq_ListMessage) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *CreateTaskReq_ListMessage) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *CreateTaskReq_ListMessage) GetSettings() *Settings {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *CreateTaskReq_ListMessage) GetMessage() *PushMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *CreateTaskReq_ListMessage) GetChannel() *PushChannel {
	if x != nil {
		return x.Channel
	}
	return nil
}

type PushToAppReq_AppMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId string       `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	GroupName string       `protobuf:"bytes,2,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
	Settings  *Settings    `protobuf:"bytes,3,opt,name=settings,proto3" json:"settings,omitempty"`
	Message   *PushMessage `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	Channel   *PushChannel `protobuf:"bytes,5,opt,name=channel,proto3" json:"channel,omitempty"`
}

func (x *PushToAppReq_AppMessage) Reset() {
	*x = PushToAppReq_AppMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushToAppReq_AppMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushToAppReq_AppMessage) ProtoMessage() {}

func (x *PushToAppReq_AppMessage) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushToAppReq_AppMessage.ProtoReflect.Descriptor instead.
func (*PushToAppReq_AppMessage) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{15, 0}
}

func (x *PushToAppReq_AppMessage) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *PushToAppReq_AppMessage) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *PushToAppReq_AppMessage) GetSettings() *Settings {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *PushToAppReq_AppMessage) GetMessage() *PushMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *PushToAppReq_AppMessage) GetChannel() *PushChannel {
	if x != nil {
		return x.Channel
	}
	return nil
}

type ViewDetailResp_Detail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time  string `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	Event string `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
}

func (x *ViewDetailResp_Detail) Reset() {
	*x = ViewDetailResp_Detail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewDetailResp_Detail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewDetailResp_Detail) ProtoMessage() {}

func (x *ViewDetailResp_Detail) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewDetailResp_Detail.ProtoReflect.Descriptor instead.
func (*ViewDetailResp_Detail) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{24, 0}
}

func (x *ViewDetailResp_Detail) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *ViewDetailResp_Detail) GetEvent() string {
	if x != nil {
		return x.Event
	}
	return ""
}

var File_push_proto protoreflect.FileDescriptor

var file_push_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x70, 0x75, 0x73, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x4f, 0x66,
	0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x22, 0xc5,
	0x02, 0x0a, 0x08, 0x41, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x63,
	0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6c, 0x69, 0x61,
	0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x08, 0x74, 0x61, 0x67, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e,
	0x65, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x65,
	0x6e, 0x63, 0x65, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x54, 0x61, 0x67, 0x52, 0x07, 0x74, 0x61, 0x67,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x61, 0x67,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x61, 0x73, 0x74, 0x54, 0x61, 0x67, 0x1a,
	0xa4, 0x01, 0x0a, 0x07, 0x50, 0x75, 0x73, 0x68, 0x54, 0x61, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1d, 0x0a,
	0x0a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x08,
	0x6f, 0x70, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29,
	0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73,
	0x68, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x54,
	0x61, 0x67, 0x2e, 0x54, 0x61, 0x67, 0x4f, 0x70, 0x74, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x22, 0x0a, 0x06, 0x54, 0x61, 0x67, 0x4f, 0x70, 0x74, 0x12, 0x06, 0x0a, 0x02,
	0x4f, 0x52, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4e, 0x44, 0x10, 0x01, 0x12, 0x07, 0x0a,
	0x03, 0x4e, 0x4f, 0x54, 0x10, 0x02, 0x22, 0xc8, 0x02, 0x0a, 0x08, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x74, 0x6c, 0x5f, 0x6d, 0x69, 0x6c, 0x6c, 0x69,
	0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x74, 0x74,
	0x6c, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x12, 0x3f, 0x0a, 0x08,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73,
	0x68, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x74, 0x72, 0x61, 0x74,
	0x65, 0x67, 0x79, 0x52, 0x08, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x70,
	0x65, 0x65, 0x64, 0x12, 0x33, 0x0a, 0x15, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64,
	0x5f, 0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x14, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x4d, 0x69, 0x6c,
	0x6c, 0x69, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x1a, 0x86, 0x01, 0x0a, 0x08, 0x53, 0x74, 0x72,
	0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x69, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x69, 0x6f,
	0x73, 0x12, 0x0e, 0x0a, 0x02, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x68, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x68,
	0x77, 0x12, 0x0e, 0x0a, 0x02, 0x78, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x78,
	0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x76, 0x76, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x76,
	0x76, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x6f,
	0x70, 0x22, 0xe4, 0x04, 0x0a, 0x0c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x19, 0x0a, 0x08,
	0x62, 0x69, 0x67, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x62, 0x69, 0x67, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x69, 0x67, 0x5f, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x69, 0x67, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x6f,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x6f,
	0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c,
	0x69, 0x63, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x6c, 0x69, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x75, 0x6d, 0x70, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x75, 0x6d, 0x70, 0x55, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x49, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x69, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x22, 0x0a, 0x0d, 0x62, 0x61, 0x64, 0x67, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x6e, 0x75, 0x6d,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x62, 0x61, 0x64, 0x67, 0x65, 0x41, 0x64, 0x64,
	0x4e, 0x75, 0x6d, 0x12, 0x40, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75,
	0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x51, 0x0a, 0x07, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3e, 0x0a, 0x06, 0x52, 0x65, 0x76, 0x6f,
	0x6b, 0x65, 0x12, 0x1e, 0x0a, 0x0b, 0x6f, 0x6c, 0x64, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x6c, 0x64, 0x54, 0x61, 0x73, 0x6b,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x22, 0xc3, 0x01, 0x0a, 0x0b, 0x50, 0x75, 0x73,
	0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x42, 0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x4f, 0x66, 0x66,
	0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x06,
	0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x4f,
	0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e,
	0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x52, 0x06, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x22, 0x8c,
	0x07, 0x0a, 0x0a, 0x49, 0x6f, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x32, 0x0a, 0x03, 0x61, 0x70, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73,
	0x68, 0x2e, 0x49, 0x6f, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x41, 0x70, 0x73,
	0x52, 0x03, 0x61, 0x70, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x62, 0x61,
	0x64, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x75, 0x74, 0x6f, 0x42,
	0x61, 0x64, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x50,
	0x0a, 0x0f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e,
	0x65, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x49, 0x6f, 0x73, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x52, 0x0e, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x28, 0x0a, 0x10, 0x61, 0x70, 0x6e, 0x73, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x70, 0x73,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x70, 0x6e, 0x73,
	0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x70, 0x73, 0x65, 0x49, 0x64, 0x1a, 0xaf, 0x04, 0x0a, 0x03, 0x41,
	0x70, 0x73, 0x12, 0x3c, 0x0a, 0x05, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x2e,
	0x50, 0x75, 0x73, 0x68, 0x2e, 0x49, 0x6f, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e,
	0x41, 0x70, 0x73, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x05, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x12, 0x2b, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x6f,
	0x75, 0x6e, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12,
	0x1b, 0x0a, 0x09, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x64, 0x1a, 0xed, 0x02, 0x0a,
	0x05, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x62, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79,
	0x12, 0x24, 0x0a, 0x0e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x6f, 0x63, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x6f, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x6f, 0x63, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x6f, 0x63, 0x4b, 0x65, 0x79, 0x12,
	0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x5f, 0x61, 0x72, 0x67, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x07, 0x6c, 0x6f, 0x63, 0x41, 0x72, 0x67, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x61,
	0x75, 0x6e, 0x63, 0x68, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x22, 0x0a,
	0x0d, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x4c, 0x6f, 0x63, 0x4b, 0x65,
	0x79, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x5f, 0x61,
	0x72, 0x67, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x4c, 0x6f, 0x63, 0x41, 0x72, 0x67, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x5f, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x29, 0x0a, 0x11, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x73, 0x75, 0x62, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x4c, 0x6f, 0x63, 0x4b, 0x65, 0x79, 0x12,
	0x2b, 0x0a, 0x12, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x6c, 0x6f, 0x63,
	0x5f, 0x61, 0x72, 0x67, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x75, 0x62,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x4c, 0x6f, 0x63, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x4f, 0x0a, 0x0a,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x6e, 0x6c, 0x79, 0x5f, 0x77, 0x69, 0x66, 0x69, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x6f, 0x6e, 0x6c, 0x79, 0x57, 0x69, 0x66, 0x69, 0x22, 0xb7, 0x01,
	0x0a, 0x0e, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x12, 0x36, 0x0a, 0x03, 0x75, 0x70, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68,
	0x2e, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e,
	0x55, 0x70, 0x73, 0x52, 0x03, 0x75, 0x70, 0x73, 0x1a, 0x6d, 0x0a, 0x03, 0x55, 0x70, 0x73, 0x12,
	0x42, 0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50,
	0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x79, 0x0a, 0x0b, 0x50, 0x75, 0x73, 0x68, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x2e, 0x0a, 0x03, 0x69, 0x6f, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73,
	0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x49, 0x6f, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x52, 0x03, 0x69, 0x6f, 0x73, 0x12, 0x3a, 0x0a, 0x07, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e,
	0x65, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x41, 0x6e, 0x64, 0x72, 0x6f,
	0x69, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x07, 0x61, 0x6e, 0x64, 0x72, 0x6f,
	0x69, 0x64, 0x22, 0xcf, 0x03, 0x0a, 0x0f, 0x50, 0x75, 0x73, 0x68, 0x54, 0x6f, 0x53, 0x69, 0x6e,
	0x67, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x73, 0x68,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65,
	0x49, 0x64, 0x12, 0x52, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69,
	0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68,
	0x54, 0x6f, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x2e, 0x53, 0x69, 0x6e, 0x67,
	0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x61, 0x73, 0x79,
	0x6e, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x41, 0x73, 0x79, 0x6e,
	0x63, 0x1a, 0x90, 0x02, 0x0a, 0x0d, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x64, 0x12, 0x36, 0x0a, 0x08, 0x61, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75,
	0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65,
	0x52, 0x08, 0x61, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x4f,
	0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x12, 0x37, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73,
	0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x37, 0x0a, 0x07, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x4f,
	0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e,
	0x50, 0x75, 0x73, 0x68, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x07, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x22, 0x99, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x41, 0x0a, 0x0b, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73,
	0x68, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x0a, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x32, 0x0a, 0x06,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x50, 0x0a, 0x10, 0x50, 0x75, 0x73, 0x68, 0x54, 0x6f, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x4f, 0x66, 0x66,
	0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x70, 0x74, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0x8a, 0x03, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x73, 0x68, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x49, 0x64,
	0x12, 0x45, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2b, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x2e,
	0x50, 0x75, 0x73, 0x68, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x65, 0x71, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0xf5, 0x01, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e,
	0x65, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x37, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73,
	0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x37, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e,
	0x65, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x22,
	0x29, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0xb7, 0x01, 0x0a, 0x0d, 0x50,
	0x75, 0x73, 0x68, 0x54, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x75, 0x73, 0x68, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x75, 0x73, 0x68, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62,
	0x75, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x08, 0x61, 0x75, 0x64, 0x69,
	0x65, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x4f, 0x66, 0x66,
	0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x41, 0x75,
	0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x08, 0x61, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f,
	0x61, 0x73, 0x79, 0x6e, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x41,
	0x73, 0x79, 0x6e, 0x63, 0x22, 0x45, 0x0a, 0x0e, 0x50, 0x75, 0x73, 0x68, 0x54, 0x6f, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x33, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e,
	0x65, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x70, 0x74, 0x52, 0x07, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x22, 0x86, 0x03, 0x0a, 0x0c,
	0x50, 0x75, 0x73, 0x68, 0x54, 0x6f, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x75, 0x73, 0x68, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x75, 0x73, 0x68, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62,
	0x75, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x43, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x4f, 0x66, 0x66, 0x6c,
	0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73,
	0x68, 0x54, 0x6f, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x2e, 0x41, 0x70, 0x70, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0xf4, 0x01,
	0x0a, 0x0a, 0x41, 0x70, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x4f,
	0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x12, 0x37, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73,
	0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x37, 0x0a, 0x07, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x4f,
	0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e,
	0x50, 0x75, 0x73, 0x68, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x07, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x22, 0x28, 0x0a, 0x0d, 0x50, 0x75, 0x73, 0x68, 0x54, 0x6f, 0x41, 0x70,
	0x70, 0x52, 0x65, 0x73, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0x62,
	0x0a, 0x0b, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x75, 0x73, 0x68, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73,
	0x6b, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b,
	0x49, 0x64, 0x22, 0x28, 0x0a, 0x0c, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x63, 0x0a, 0x0c,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x75, 0x73, 0x68, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x75, 0x73, 0x68, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62,
	0x75, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49,
	0x64, 0x22, 0xb1, 0x01, 0x0a, 0x0d, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x31, 0x0a, 0x14, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x13, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x75, 0x73, 0x68,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x75, 0x73,
	0x68, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x64, 0x0a, 0x0d, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x73, 0x68,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0x2a, 0x0a, 0x0e, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x76, 0x0a, 0x0d, 0x56, 0x69, 0x65, 0x77, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x73, 0x68,
	0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75,
	0x73, 0x68, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75, 0x6e, 0x64, 0x6c,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x75, 0x6e, 0x64,
	0x6c, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x63, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x64, 0x22,
	0x8e, 0x01, 0x0a, 0x0e, 0x56, 0x69, 0x65, 0x77, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x48, 0x0a, 0x0b, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e,
	0x65, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x0a, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x32, 0x0a, 0x06,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x32, 0x98, 0x05, 0x0a, 0x04, 0x50, 0x75, 0x73, 0x68, 0x12, 0x57, 0x0a, 0x0c, 0x50, 0x75, 0x73,
	0x68, 0x54, 0x6f, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x12, 0x21, 0x2e, 0x4f, 0x66, 0x66, 0x6c,
	0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73,
	0x68, 0x54, 0x6f, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x4f,
	0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e,
	0x50, 0x75, 0x73, 0x68, 0x54, 0x6f, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x51, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b,
	0x12, 0x1f, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50,
	0x75, 0x73, 0x68, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65,
	0x71, 0x1a, 0x20, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x2e,
	0x50, 0x75, 0x73, 0x68, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x0a, 0x50, 0x75, 0x73, 0x68, 0x54, 0x6f, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x1f, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73,
	0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x54, 0x6f, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x70, 0x1a, 0x20, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75,
	0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x54, 0x6f, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x09, 0x50, 0x75, 0x73, 0x68,
	0x54, 0x6f, 0x41, 0x70, 0x70, 0x12, 0x1e, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50,
	0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x54, 0x6f, 0x41,
	0x70, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50,
	0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x54, 0x6f, 0x41,
	0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x08, 0x53, 0x74, 0x6f, 0x70,
	0x54, 0x61, 0x73, 0x6b, 0x12, 0x1d, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75,
	0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x61, 0x73, 0x6b,
	0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73,
	0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x09, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x61,
	0x73, 0x6b, 0x12, 0x1e, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68,
	0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68,
	0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x0a, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54,
	0x61, 0x73, 0x6b, 0x12, 0x1f, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73,
	0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75,
	0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x0a, 0x56, 0x69, 0x65, 0x77,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1f, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65,
	0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e,
	0x65, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x42, 0x09, 0x5a, 0x07, 0x2e,
	0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_push_proto_rawDescOnce sync.Once
	file_push_proto_rawDescData = file_push_proto_rawDesc
)

func file_push_proto_rawDescGZIP() []byte {
	file_push_proto_rawDescOnce.Do(func() {
		file_push_proto_rawDescData = protoimpl.X.CompressGZIP(file_push_proto_rawDescData)
	})
	return file_push_proto_rawDescData
}

var file_push_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_push_proto_msgTypes = make([]protoimpl.MessageInfo, 37)
var file_push_proto_goTypes = []interface{}{
	(Audience_PushTag_TagOpt)(0),          // 0: OfflinePush.Push.Audience.PushTag.TagOpt
	(*Audience)(nil),                      // 1: OfflinePush.Push.Audience
	(*Settings)(nil),                      // 2: OfflinePush.Push.Settings
	(*Notification)(nil),                  // 3: OfflinePush.Push.Notification
	(*Revoke)(nil),                        // 4: OfflinePush.Push.Revoke
	(*PushMessage)(nil),                   // 5: OfflinePush.Push.PushMessage
	(*IosChannel)(nil),                    // 6: OfflinePush.Push.IosChannel
	(*AndroidChannel)(nil),                // 7: OfflinePush.Push.AndroidChannel
	(*PushChannel)(nil),                   // 8: OfflinePush.Push.PushChannel
	(*PushToSingleReq)(nil),               // 9: OfflinePush.Push.PushToSingleReq
	(*Receipt)(nil),                       // 10: OfflinePush.Push.Receipt
	(*PushToSingleResp)(nil),              // 11: OfflinePush.Push.PushToSingleResp
	(*CreateTaskReq)(nil),                 // 12: OfflinePush.Push.CreateTaskReq
	(*CreateTaskResp)(nil),                // 13: OfflinePush.Push.CreateTaskResp
	(*PushToListRep)(nil),                 // 14: OfflinePush.Push.PushToListRep
	(*PushToListResp)(nil),                // 15: OfflinePush.Push.PushToListResp
	(*PushToAppReq)(nil),                  // 16: OfflinePush.Push.PushToAppReq
	(*PushToAppResp)(nil),                 // 17: OfflinePush.Push.PushToAppResp
	(*StopTaskReq)(nil),                   // 18: OfflinePush.Push.StopTaskReq
	(*StopTaskResp)(nil),                  // 19: OfflinePush.Push.StopTaskResp
	(*CheckTaskReq)(nil),                  // 20: OfflinePush.Push.CheckTaskReq
	(*CheckTaskResp)(nil),                 // 21: OfflinePush.Push.CheckTaskResp
	(*RemoveTaskReq)(nil),                 // 22: OfflinePush.Push.RemoveTaskReq
	(*RemoveTaskResp)(nil),                // 23: OfflinePush.Push.RemoveTaskResp
	(*ViewDetailReq)(nil),                 // 24: OfflinePush.Push.ViewDetailReq
	(*ViewDetailResp)(nil),                // 25: OfflinePush.Push.ViewDetailResp
	(*Audience_PushTag)(nil),              // 26: OfflinePush.Push.Audience.PushTag
	(*Settings_Strategy)(nil),             // 27: OfflinePush.Push.Settings.Strategy
	(*Notification_Options)(nil),          // 28: OfflinePush.Push.Notification.Options
	(*IosChannel_Aps)(nil),                // 29: OfflinePush.Push.IosChannel.Aps
	(*IosChannel_Multimedia)(nil),         // 30: OfflinePush.Push.IosChannel.Multimedia
	(*IosChannel_Aps_Alert)(nil),          // 31: OfflinePush.Push.IosChannel.Aps.Alert
	(*AndroidChannel_Ups)(nil),            // 32: OfflinePush.Push.AndroidChannel.Ups
	(*PushToSingleReq_SingleMessage)(nil), // 33: OfflinePush.Push.PushToSingleReq.SingleMessage
	(*Receipt_Detail)(nil),                // 34: OfflinePush.Push.Receipt.Detail
	(*CreateTaskReq_ListMessage)(nil),     // 35: OfflinePush.Push.CreateTaskReq.ListMessage
	(*PushToAppReq_AppMessage)(nil),       // 36: OfflinePush.Push.PushToAppReq.AppMessage
	(*ViewDetailResp_Detail)(nil),         // 37: OfflinePush.Push.ViewDetailResp.Detail
}
var file_push_proto_depIdxs = []int32{
	26, // 0: OfflinePush.Push.Audience.tag_list:type_name -> OfflinePush.Push.Audience.PushTag
	27, // 1: OfflinePush.Push.Settings.strategy:type_name -> OfflinePush.Push.Settings.Strategy
	28, // 2: OfflinePush.Push.Notification.options:type_name -> OfflinePush.Push.Notification.Options
	3,  // 3: OfflinePush.Push.PushMessage.notification:type_name -> OfflinePush.Push.Notification
	4,  // 4: OfflinePush.Push.PushMessage.revoke:type_name -> OfflinePush.Push.Revoke
	29, // 5: OfflinePush.Push.IosChannel.aps:type_name -> OfflinePush.Push.IosChannel.Aps
	30, // 6: OfflinePush.Push.IosChannel.multimedia_list:type_name -> OfflinePush.Push.IosChannel.Multimedia
	32, // 7: OfflinePush.Push.AndroidChannel.ups:type_name -> OfflinePush.Push.AndroidChannel.Ups
	6,  // 8: OfflinePush.Push.PushChannel.ios:type_name -> OfflinePush.Push.IosChannel
	7,  // 9: OfflinePush.Push.PushChannel.android:type_name -> OfflinePush.Push.AndroidChannel
	33, // 10: OfflinePush.Push.PushToSingleReq.message_list:type_name -> OfflinePush.Push.PushToSingleReq.SingleMessage
	34, // 11: OfflinePush.Push.Receipt.detail_list:type_name -> OfflinePush.Push.Receipt.Detail
	10, // 12: OfflinePush.Push.PushToSingleResp.receipt_list:type_name -> OfflinePush.Push.Receipt
	35, // 13: OfflinePush.Push.CreateTaskReq.message:type_name -> OfflinePush.Push.CreateTaskReq.ListMessage
	1,  // 14: OfflinePush.Push.PushToListRep.audience:type_name -> OfflinePush.Push.Audience
	10, // 15: OfflinePush.Push.PushToListResp.receipt:type_name -> OfflinePush.Push.Receipt
	36, // 16: OfflinePush.Push.PushToAppReq.message:type_name -> OfflinePush.Push.PushToAppReq.AppMessage
	37, // 17: OfflinePush.Push.ViewDetailResp.detail_list:type_name -> OfflinePush.Push.ViewDetailResp.Detail
	0,  // 18: OfflinePush.Push.Audience.PushTag.opt_type:type_name -> OfflinePush.Push.Audience.PushTag.TagOpt
	31, // 19: OfflinePush.Push.IosChannel.Aps.alert:type_name -> OfflinePush.Push.IosChannel.Aps.Alert
	3,  // 20: OfflinePush.Push.AndroidChannel.Ups.notification:type_name -> OfflinePush.Push.Notification
	1,  // 21: OfflinePush.Push.PushToSingleReq.SingleMessage.audience:type_name -> OfflinePush.Push.Audience
	2,  // 22: OfflinePush.Push.PushToSingleReq.SingleMessage.settings:type_name -> OfflinePush.Push.Settings
	5,  // 23: OfflinePush.Push.PushToSingleReq.SingleMessage.message:type_name -> OfflinePush.Push.PushMessage
	8,  // 24: OfflinePush.Push.PushToSingleReq.SingleMessage.channel:type_name -> OfflinePush.Push.PushChannel
	2,  // 25: OfflinePush.Push.CreateTaskReq.ListMessage.settings:type_name -> OfflinePush.Push.Settings
	5,  // 26: OfflinePush.Push.CreateTaskReq.ListMessage.message:type_name -> OfflinePush.Push.PushMessage
	8,  // 27: OfflinePush.Push.CreateTaskReq.ListMessage.channel:type_name -> OfflinePush.Push.PushChannel
	2,  // 28: OfflinePush.Push.PushToAppReq.AppMessage.settings:type_name -> OfflinePush.Push.Settings
	5,  // 29: OfflinePush.Push.PushToAppReq.AppMessage.message:type_name -> OfflinePush.Push.PushMessage
	8,  // 30: OfflinePush.Push.PushToAppReq.AppMessage.channel:type_name -> OfflinePush.Push.PushChannel
	9,  // 31: OfflinePush.Push.Push.PushToSingle:input_type -> OfflinePush.Push.PushToSingleReq
	12, // 32: OfflinePush.Push.Push.CreateTask:input_type -> OfflinePush.Push.CreateTaskReq
	14, // 33: OfflinePush.Push.Push.PushToList:input_type -> OfflinePush.Push.PushToListRep
	16, // 34: OfflinePush.Push.Push.PushToApp:input_type -> OfflinePush.Push.PushToAppReq
	18, // 35: OfflinePush.Push.Push.StopTask:input_type -> OfflinePush.Push.StopTaskReq
	20, // 36: OfflinePush.Push.Push.CheckTask:input_type -> OfflinePush.Push.CheckTaskReq
	22, // 37: OfflinePush.Push.Push.RemoveTask:input_type -> OfflinePush.Push.RemoveTaskReq
	24, // 38: OfflinePush.Push.Push.ViewDetail:input_type -> OfflinePush.Push.ViewDetailReq
	11, // 39: OfflinePush.Push.Push.PushToSingle:output_type -> OfflinePush.Push.PushToSingleResp
	13, // 40: OfflinePush.Push.Push.CreateTask:output_type -> OfflinePush.Push.CreateTaskResp
	15, // 41: OfflinePush.Push.Push.PushToList:output_type -> OfflinePush.Push.PushToListResp
	17, // 42: OfflinePush.Push.Push.PushToApp:output_type -> OfflinePush.Push.PushToAppResp
	19, // 43: OfflinePush.Push.Push.StopTask:output_type -> OfflinePush.Push.StopTaskResp
	21, // 44: OfflinePush.Push.Push.CheckTask:output_type -> OfflinePush.Push.CheckTaskResp
	23, // 45: OfflinePush.Push.Push.RemoveTask:output_type -> OfflinePush.Push.RemoveTaskResp
	25, // 46: OfflinePush.Push.Push.ViewDetail:output_type -> OfflinePush.Push.ViewDetailResp
	39, // [39:47] is the sub-list for method output_type
	31, // [31:39] is the sub-list for method input_type
	31, // [31:31] is the sub-list for extension type_name
	31, // [31:31] is the sub-list for extension extendee
	0,  // [0:31] is the sub-list for field type_name
}

func init() { file_push_proto_init() }
func file_push_proto_init() {
	if File_push_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_push_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Audience); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Settings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Notification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Revoke); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IosChannel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AndroidChannel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushChannel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushToSingleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Receipt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushToSingleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTaskReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTaskResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushToListRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushToListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushToAppReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushToAppResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopTaskReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopTaskResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckTaskReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckTaskResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveTaskReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveTaskResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Audience_PushTag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Settings_Strategy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Notification_Options); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IosChannel_Aps); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IosChannel_Multimedia); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IosChannel_Aps_Alert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AndroidChannel_Ups); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushToSingleReq_SingleMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Receipt_Detail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTaskReq_ListMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushToAppReq_AppMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewDetailResp_Detail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_push_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   37,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_push_proto_goTypes,
		DependencyIndexes: file_push_proto_depIdxs,
		EnumInfos:         file_push_proto_enumTypes,
		MessageInfos:      file_push_proto_msgTypes,
	}.Build()
	File_push_proto = out.File
	file_push_proto_rawDesc = nil
	file_push_proto_goTypes = nil
	file_push_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PushClient is the client API for Push service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PushClient interface {
	PushToSingle(ctx context.Context, in *PushToSingleReq, opts ...grpc.CallOption) (*PushToSingleResp, error)
	CreateTask(ctx context.Context, in *CreateTaskReq, opts ...grpc.CallOption) (*CreateTaskResp, error)
	PushToList(ctx context.Context, in *PushToListRep, opts ...grpc.CallOption) (*PushToListResp, error)
	PushToApp(ctx context.Context, in *PushToAppReq, opts ...grpc.CallOption) (*PushToAppResp, error)
	StopTask(ctx context.Context, in *StopTaskReq, opts ...grpc.CallOption) (*StopTaskResp, error)
	CheckTask(ctx context.Context, in *CheckTaskReq, opts ...grpc.CallOption) (*CheckTaskResp, error)
	RemoveTask(ctx context.Context, in *RemoveTaskReq, opts ...grpc.CallOption) (*RemoveTaskResp, error)
	ViewDetail(ctx context.Context, in *ViewDetailReq, opts ...grpc.CallOption) (*ViewDetailResp, error)
}

type pushClient struct {
	cc grpc.ClientConnInterface
}

func NewPushClient(cc grpc.ClientConnInterface) PushClient {
	return &pushClient{cc}
}

func (c *pushClient) PushToSingle(ctx context.Context, in *PushToSingleReq, opts ...grpc.CallOption) (*PushToSingleResp, error) {
	out := new(PushToSingleResp)
	err := c.cc.Invoke(ctx, "/OfflinePush.Push.Push/PushToSingle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pushClient) CreateTask(ctx context.Context, in *CreateTaskReq, opts ...grpc.CallOption) (*CreateTaskResp, error) {
	out := new(CreateTaskResp)
	err := c.cc.Invoke(ctx, "/OfflinePush.Push.Push/CreateTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pushClient) PushToList(ctx context.Context, in *PushToListRep, opts ...grpc.CallOption) (*PushToListResp, error) {
	out := new(PushToListResp)
	err := c.cc.Invoke(ctx, "/OfflinePush.Push.Push/PushToList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pushClient) PushToApp(ctx context.Context, in *PushToAppReq, opts ...grpc.CallOption) (*PushToAppResp, error) {
	out := new(PushToAppResp)
	err := c.cc.Invoke(ctx, "/OfflinePush.Push.Push/PushToApp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pushClient) StopTask(ctx context.Context, in *StopTaskReq, opts ...grpc.CallOption) (*StopTaskResp, error) {
	out := new(StopTaskResp)
	err := c.cc.Invoke(ctx, "/OfflinePush.Push.Push/StopTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pushClient) CheckTask(ctx context.Context, in *CheckTaskReq, opts ...grpc.CallOption) (*CheckTaskResp, error) {
	out := new(CheckTaskResp)
	err := c.cc.Invoke(ctx, "/OfflinePush.Push.Push/CheckTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pushClient) RemoveTask(ctx context.Context, in *RemoveTaskReq, opts ...grpc.CallOption) (*RemoveTaskResp, error) {
	out := new(RemoveTaskResp)
	err := c.cc.Invoke(ctx, "/OfflinePush.Push.Push/RemoveTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pushClient) ViewDetail(ctx context.Context, in *ViewDetailReq, opts ...grpc.CallOption) (*ViewDetailResp, error) {
	out := new(ViewDetailResp)
	err := c.cc.Invoke(ctx, "/OfflinePush.Push.Push/ViewDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PushServer is the server API for Push service.
type PushServer interface {
	PushToSingle(context.Context, *PushToSingleReq) (*PushToSingleResp, error)
	CreateTask(context.Context, *CreateTaskReq) (*CreateTaskResp, error)
	PushToList(context.Context, *PushToListRep) (*PushToListResp, error)
	PushToApp(context.Context, *PushToAppReq) (*PushToAppResp, error)
	StopTask(context.Context, *StopTaskReq) (*StopTaskResp, error)
	CheckTask(context.Context, *CheckTaskReq) (*CheckTaskResp, error)
	RemoveTask(context.Context, *RemoveTaskReq) (*RemoveTaskResp, error)
	ViewDetail(context.Context, *ViewDetailReq) (*ViewDetailResp, error)
}

// UnimplementedPushServer can be embedded to have forward compatible implementations.
type UnimplementedPushServer struct {
}

func (*UnimplementedPushServer) PushToSingle(context.Context, *PushToSingleReq) (*PushToSingleResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PushToSingle not implemented")
}
func (*UnimplementedPushServer) CreateTask(context.Context, *CreateTaskReq) (*CreateTaskResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTask not implemented")
}
func (*UnimplementedPushServer) PushToList(context.Context, *PushToListRep) (*PushToListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PushToList not implemented")
}
func (*UnimplementedPushServer) PushToApp(context.Context, *PushToAppReq) (*PushToAppResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PushToApp not implemented")
}
func (*UnimplementedPushServer) StopTask(context.Context, *StopTaskReq) (*StopTaskResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StopTask not implemented")
}
func (*UnimplementedPushServer) CheckTask(context.Context, *CheckTaskReq) (*CheckTaskResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckTask not implemented")
}
func (*UnimplementedPushServer) RemoveTask(context.Context, *RemoveTaskReq) (*RemoveTaskResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveTask not implemented")
}
func (*UnimplementedPushServer) ViewDetail(context.Context, *ViewDetailReq) (*ViewDetailResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ViewDetail not implemented")
}

func RegisterPushServer(s *grpc.Server, srv PushServer) {
	s.RegisterService(&_Push_serviceDesc, srv)
}

func _Push_PushToSingle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PushToSingleReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PushServer).PushToSingle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OfflinePush.Push.Push/PushToSingle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PushServer).PushToSingle(ctx, req.(*PushToSingleReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Push_CreateTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTaskReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PushServer).CreateTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OfflinePush.Push.Push/CreateTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PushServer).CreateTask(ctx, req.(*CreateTaskReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Push_PushToList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PushToListRep)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PushServer).PushToList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OfflinePush.Push.Push/PushToList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PushServer).PushToList(ctx, req.(*PushToListRep))
	}
	return interceptor(ctx, in, info, handler)
}

func _Push_PushToApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PushToAppReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PushServer).PushToApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OfflinePush.Push.Push/PushToApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PushServer).PushToApp(ctx, req.(*PushToAppReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Push_StopTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StopTaskReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PushServer).StopTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OfflinePush.Push.Push/StopTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PushServer).StopTask(ctx, req.(*StopTaskReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Push_CheckTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckTaskReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PushServer).CheckTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OfflinePush.Push.Push/CheckTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PushServer).CheckTask(ctx, req.(*CheckTaskReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Push_RemoveTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveTaskReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PushServer).RemoveTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OfflinePush.Push.Push/RemoveTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PushServer).RemoveTask(ctx, req.(*RemoveTaskReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Push_ViewDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ViewDetailReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PushServer).ViewDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OfflinePush.Push.Push/ViewDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PushServer).ViewDetail(ctx, req.(*ViewDetailReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Push_serviceDesc = grpc.ServiceDesc{
	ServiceName: "OfflinePush.Push.Push",
	HandlerType: (*PushServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PushToSingle",
			Handler:    _Push_PushToSingle_Handler,
		},
		{
			MethodName: "CreateTask",
			Handler:    _Push_CreateTask_Handler,
		},
		{
			MethodName: "PushToList",
			Handler:    _Push_PushToList_Handler,
		},
		{
			MethodName: "PushToApp",
			Handler:    _Push_PushToApp_Handler,
		},
		{
			MethodName: "StopTask",
			Handler:    _Push_StopTask_Handler,
		},
		{
			MethodName: "CheckTask",
			Handler:    _Push_CheckTask_Handler,
		},
		{
			MethodName: "RemoveTask",
			Handler:    _Push_RemoveTask_Handler,
		},
		{
			MethodName: "ViewDetail",
			Handler:    _Push_ViewDetail_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "push.proto",
}
