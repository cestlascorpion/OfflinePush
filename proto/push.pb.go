// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.12.4
// source: push.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PushToSingleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PushAgent string       `protobuf:"bytes,1,opt,name=push_agent,json=pushAgent,proto3" json:"push_agent,omitempty"`
	BundleId  string       `protobuf:"bytes,2,opt,name=bundle_id,json=bundleId,proto3" json:"bundle_id,omitempty"`
	MsgList   []*SingleMsg `protobuf:"bytes,3,rep,name=msg_list,json=msgList,proto3" json:"msg_list,omitempty"`
	IsAsync   bool         `protobuf:"varint,4,opt,name=is_async,json=isAsync,proto3" json:"is_async,omitempty"`
}

func (x *PushToSingleReq) Reset() {
	*x = PushToSingleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushToSingleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushToSingleReq) ProtoMessage() {}

func (x *PushToSingleReq) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushToSingleReq.ProtoReflect.Descriptor instead.
func (*PushToSingleReq) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{0}
}

func (x *PushToSingleReq) GetPushAgent() string {
	if x != nil {
		return x.PushAgent
	}
	return ""
}

func (x *PushToSingleReq) GetBundleId() string {
	if x != nil {
		return x.BundleId
	}
	return ""
}

func (x *PushToSingleReq) GetMsgList() []*SingleMsg {
	if x != nil {
		return x.MsgList
	}
	return nil
}

func (x *PushToSingleReq) GetIsAsync() bool {
	if x != nil {
		return x.IsAsync
	}
	return false
}

type PushToSingleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReceiptList []*Receipt `protobuf:"bytes,1,rep,name=receipt_list,json=receiptList,proto3" json:"receipt_list,omitempty"`
}

func (x *PushToSingleResp) Reset() {
	*x = PushToSingleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushToSingleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushToSingleResp) ProtoMessage() {}

func (x *PushToSingleResp) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushToSingleResp.ProtoReflect.Descriptor instead.
func (*PushToSingleResp) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{1}
}

func (x *PushToSingleResp) GetReceiptList() []*Receipt {
	if x != nil {
		return x.ReceiptList
	}
	return nil
}

type CreateTaskReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PushAgent string     `protobuf:"bytes,1,opt,name=push_agent,json=pushAgent,proto3" json:"push_agent,omitempty"`
	BundleId  string     `protobuf:"bytes,2,opt,name=bundle_id,json=bundleId,proto3" json:"bundle_id,omitempty"`
	Msg       *CreateMsg `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *CreateTaskReq) Reset() {
	*x = CreateTaskReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTaskReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTaskReq) ProtoMessage() {}

func (x *CreateTaskReq) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTaskReq.ProtoReflect.Descriptor instead.
func (*CreateTaskReq) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{2}
}

func (x *CreateTaskReq) GetPushAgent() string {
	if x != nil {
		return x.PushAgent
	}
	return ""
}

func (x *CreateTaskReq) GetBundleId() string {
	if x != nil {
		return x.BundleId
	}
	return ""
}

func (x *CreateTaskReq) GetMsg() *CreateMsg {
	if x != nil {
		return x.Msg
	}
	return nil
}

type CreateTaskResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId string `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
}

func (x *CreateTaskResp) Reset() {
	*x = CreateTaskResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTaskResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTaskResp) ProtoMessage() {}

func (x *CreateTaskResp) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTaskResp.ProtoReflect.Descriptor instead.
func (*CreateTaskResp) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{3}
}

func (x *CreateTaskResp) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

type PushToListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PushAgent string   `protobuf:"bytes,1,opt,name=push_agent,json=pushAgent,proto3" json:"push_agent,omitempty"`
	BundleId  string   `protobuf:"bytes,2,opt,name=bundle_id,json=bundleId,proto3" json:"bundle_id,omitempty"`
	Msg       *ListMsg `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	IsAsync   bool     `protobuf:"varint,4,opt,name=is_async,json=isAsync,proto3" json:"is_async,omitempty"`
}

func (x *PushToListReq) Reset() {
	*x = PushToListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushToListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushToListReq) ProtoMessage() {}

func (x *PushToListReq) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushToListReq.ProtoReflect.Descriptor instead.
func (*PushToListReq) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{4}
}

func (x *PushToListReq) GetPushAgent() string {
	if x != nil {
		return x.PushAgent
	}
	return ""
}

func (x *PushToListReq) GetBundleId() string {
	if x != nil {
		return x.BundleId
	}
	return ""
}

func (x *PushToListReq) GetMsg() *ListMsg {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *PushToListReq) GetIsAsync() bool {
	if x != nil {
		return x.IsAsync
	}
	return false
}

type PushToListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Receipt *Receipt `protobuf:"bytes,1,opt,name=receipt,proto3" json:"receipt,omitempty"`
}

func (x *PushToListResp) Reset() {
	*x = PushToListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushToListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushToListResp) ProtoMessage() {}

func (x *PushToListResp) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushToListResp.ProtoReflect.Descriptor instead.
func (*PushToListResp) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{5}
}

func (x *PushToListResp) GetReceipt() *Receipt {
	if x != nil {
		return x.Receipt
	}
	return nil
}

type PushToAppReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PushAgent string  `protobuf:"bytes,1,opt,name=push_agent,json=pushAgent,proto3" json:"push_agent,omitempty"`
	BundleId  string  `protobuf:"bytes,2,opt,name=bundle_id,json=bundleId,proto3" json:"bundle_id,omitempty"`
	Msg       *AppMsg `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *PushToAppReq) Reset() {
	*x = PushToAppReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushToAppReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushToAppReq) ProtoMessage() {}

func (x *PushToAppReq) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushToAppReq.ProtoReflect.Descriptor instead.
func (*PushToAppReq) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{6}
}

func (x *PushToAppReq) GetPushAgent() string {
	if x != nil {
		return x.PushAgent
	}
	return ""
}

func (x *PushToAppReq) GetBundleId() string {
	if x != nil {
		return x.BundleId
	}
	return ""
}

func (x *PushToAppReq) GetMsg() *AppMsg {
	if x != nil {
		return x.Msg
	}
	return nil
}

type PushToAppResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId string `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
}

func (x *PushToAppResp) Reset() {
	*x = PushToAppResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushToAppResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushToAppResp) ProtoMessage() {}

func (x *PushToAppResp) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushToAppResp.ProtoReflect.Descriptor instead.
func (*PushToAppResp) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{7}
}

func (x *PushToAppResp) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

type StopTaskReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PushAgent string `protobuf:"bytes,1,opt,name=push_agent,json=pushAgent,proto3" json:"push_agent,omitempty"`
	BundleId  string `protobuf:"bytes,2,opt,name=bundle_id,json=bundleId,proto3" json:"bundle_id,omitempty"`
	TaskId    string `protobuf:"bytes,3,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
}

func (x *StopTaskReq) Reset() {
	*x = StopTaskReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopTaskReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopTaskReq) ProtoMessage() {}

func (x *StopTaskReq) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopTaskReq.ProtoReflect.Descriptor instead.
func (*StopTaskReq) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{8}
}

func (x *StopTaskReq) GetPushAgent() string {
	if x != nil {
		return x.PushAgent
	}
	return ""
}

func (x *StopTaskReq) GetBundleId() string {
	if x != nil {
		return x.BundleId
	}
	return ""
}

func (x *StopTaskReq) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

type StopTaskResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *StopTaskResp) Reset() {
	*x = StopTaskResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopTaskResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopTaskResp) ProtoMessage() {}

func (x *StopTaskResp) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopTaskResp.ProtoReflect.Descriptor instead.
func (*StopTaskResp) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{9}
}

func (x *StopTaskResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type RemoveTaskReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PushAgent string `protobuf:"bytes,1,opt,name=push_agent,json=pushAgent,proto3" json:"push_agent,omitempty"`
	BundleId  string `protobuf:"bytes,2,opt,name=bundle_id,json=bundleId,proto3" json:"bundle_id,omitempty"`
	TaskId    string `protobuf:"bytes,3,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
}

func (x *RemoveTaskReq) Reset() {
	*x = RemoveTaskReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveTaskReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveTaskReq) ProtoMessage() {}

func (x *RemoveTaskReq) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveTaskReq.ProtoReflect.Descriptor instead.
func (*RemoveTaskReq) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{10}
}

func (x *RemoveTaskReq) GetPushAgent() string {
	if x != nil {
		return x.PushAgent
	}
	return ""
}

func (x *RemoveTaskReq) GetBundleId() string {
	if x != nil {
		return x.BundleId
	}
	return ""
}

func (x *RemoveTaskReq) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

type RemoveTaskResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *RemoveTaskResp) Reset() {
	*x = RemoveTaskResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveTaskResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveTaskResp) ProtoMessage() {}

func (x *RemoveTaskResp) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveTaskResp.ProtoReflect.Descriptor instead.
func (*RemoveTaskResp) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{11}
}

func (x *RemoveTaskResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type CheckTaskReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PushAgent string `protobuf:"bytes,1,opt,name=push_agent,json=pushAgent,proto3" json:"push_agent,omitempty"`
	BundleId  string `protobuf:"bytes,2,opt,name=bundle_id,json=bundleId,proto3" json:"bundle_id,omitempty"`
	TaskId    string `protobuf:"bytes,3,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
}

func (x *CheckTaskReq) Reset() {
	*x = CheckTaskReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckTaskReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckTaskReq) ProtoMessage() {}

func (x *CheckTaskReq) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckTaskReq.ProtoReflect.Descriptor instead.
func (*CheckTaskReq) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{12}
}

func (x *CheckTaskReq) GetPushAgent() string {
	if x != nil {
		return x.PushAgent
	}
	return ""
}

func (x *CheckTaskReq) GetBundleId() string {
	if x != nil {
		return x.BundleId
	}
	return ""
}

func (x *CheckTaskReq) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

type CheckTaskResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateTime          int64  `protobuf:"varint,1,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	Status              string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	TransmissionContent string `protobuf:"bytes,3,opt,name=transmission_content,json=transmissionContent,proto3" json:"transmission_content,omitempty"`
	PushTime            int64  `protobuf:"varint,4,opt,name=push_time,json=pushTime,proto3" json:"push_time,omitempty"`
}

func (x *CheckTaskResp) Reset() {
	*x = CheckTaskResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckTaskResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckTaskResp) ProtoMessage() {}

func (x *CheckTaskResp) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckTaskResp.ProtoReflect.Descriptor instead.
func (*CheckTaskResp) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{13}
}

func (x *CheckTaskResp) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *CheckTaskResp) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CheckTaskResp) GetTransmissionContent() string {
	if x != nil {
		return x.TransmissionContent
	}
	return ""
}

func (x *CheckTaskResp) GetPushTime() int64 {
	if x != nil {
		return x.PushTime
	}
	return 0
}

type ViewDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PushAgent string `protobuf:"bytes,1,opt,name=push_agent,json=pushAgent,proto3" json:"push_agent,omitempty"`
	BundleId  string `protobuf:"bytes,2,opt,name=bundle_id,json=bundleId,proto3" json:"bundle_id,omitempty"`
	TaskId    string `protobuf:"bytes,3,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Cid       string `protobuf:"bytes,4,opt,name=cid,proto3" json:"cid,omitempty"`
}

func (x *ViewDetailReq) Reset() {
	*x = ViewDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewDetailReq) ProtoMessage() {}

func (x *ViewDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewDetailReq.ProtoReflect.Descriptor instead.
func (*ViewDetailReq) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{14}
}

func (x *ViewDetailReq) GetPushAgent() string {
	if x != nil {
		return x.PushAgent
	}
	return ""
}

func (x *ViewDetailReq) GetBundleId() string {
	if x != nil {
		return x.BundleId
	}
	return ""
}

func (x *ViewDetailReq) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *ViewDetailReq) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

type ViewDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DetailList []*ViewDetailResp_Detail `protobuf:"bytes,1,rep,name=detail_list,json=detailList,proto3" json:"detail_list,omitempty"`
}

func (x *ViewDetailResp) Reset() {
	*x = ViewDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewDetailResp) ProtoMessage() {}

func (x *ViewDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewDetailResp.ProtoReflect.Descriptor instead.
func (*ViewDetailResp) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{15}
}

func (x *ViewDetailResp) GetDetailList() []*ViewDetailResp_Detail {
	if x != nil {
		return x.DetailList
	}
	return nil
}

type Audience struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid           []string        `protobuf:"bytes,1,rep,name=cid,proto3" json:"cid,omitempty"`
	Alias         []string        `protobuf:"bytes,2,rep,name=alias,proto3" json:"alias,omitempty"`
	Tag           []*Audience_Tag `protobuf:"bytes,3,rep,name=tag,proto3" json:"tag,omitempty"`
	FastCustomTag string          `protobuf:"bytes,4,opt,name=fast_custom_tag,json=fastCustomTag,proto3" json:"fast_custom_tag,omitempty"`
}

func (x *Audience) Reset() {
	*x = Audience{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Audience) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Audience) ProtoMessage() {}

func (x *Audience) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Audience.ProtoReflect.Descriptor instead.
func (*Audience) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{16}
}

func (x *Audience) GetCid() []string {
	if x != nil {
		return x.Cid
	}
	return nil
}

func (x *Audience) GetAlias() []string {
	if x != nil {
		return x.Alias
	}
	return nil
}

func (x *Audience) GetTag() []*Audience_Tag {
	if x != nil {
		return x.Tag
	}
	return nil
}

func (x *Audience) GetFastCustomTag() string {
	if x != nil {
		return x.FastCustomTag
	}
	return ""
}

type Settings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ttl          int64              `protobuf:"varint,1,opt,name=ttl,proto3" json:"ttl,omitempty"`
	Strategy     *Settings_Strategy `protobuf:"bytes,2,opt,name=strategy,proto3" json:"strategy,omitempty"`
	Speed        int64              `protobuf:"varint,3,opt,name=speed,proto3" json:"speed,omitempty"`
	ScheduleTime int64              `protobuf:"varint,4,opt,name=schedule_time,json=scheduleTime,proto3" json:"schedule_time,omitempty"`
}

func (x *Settings) Reset() {
	*x = Settings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Settings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Settings) ProtoMessage() {}

func (x *Settings) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Settings.ProtoReflect.Descriptor instead.
func (*Settings) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{17}
}

func (x *Settings) GetTtl() int64 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

func (x *Settings) GetStrategy() *Settings_Strategy {
	if x != nil {
		return x.Strategy
	}
	return nil
}

func (x *Settings) GetSpeed() int64 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *Settings) GetScheduleTime() int64 {
	if x != nil {
		return x.ScheduleTime
	}
	return 0
}

type PushMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Duration     string                    `protobuf:"bytes,1,opt,name=duration,proto3" json:"duration,omitempty"`
	Notification *PushMessage_Notification `protobuf:"bytes,2,opt,name=notification,proto3" json:"notification,omitempty"`
	Transmission string                    `protobuf:"bytes,3,opt,name=transmission,proto3" json:"transmission,omitempty"`
	Revoke       *PushMessage_Revoke       `protobuf:"bytes,4,opt,name=revoke,proto3" json:"revoke,omitempty"`
}

func (x *PushMessage) Reset() {
	*x = PushMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushMessage) ProtoMessage() {}

func (x *PushMessage) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushMessage.ProtoReflect.Descriptor instead.
func (*PushMessage) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{18}
}

func (x *PushMessage) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

func (x *PushMessage) GetNotification() *PushMessage_Notification {
	if x != nil {
		return x.Notification
	}
	return nil
}

func (x *PushMessage) GetTransmission() string {
	if x != nil {
		return x.Transmission
	}
	return ""
}

func (x *PushMessage) GetRevoke() *PushMessage_Revoke {
	if x != nil {
		return x.Revoke
	}
	return nil
}

type IosChannel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type       string                   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Aps        *IosChannel_Aps          `protobuf:"bytes,2,opt,name=aps,proto3" json:"aps,omitempty"`
	AutoBadge  string                   `protobuf:"bytes,3,opt,name=auto_badge,json=autoBadge,proto3" json:"auto_badge,omitempty"`
	Payload    string                   `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"`
	Multimedia []*IosChannel_Multimedia `protobuf:"bytes,5,rep,name=multimedia,proto3" json:"multimedia,omitempty"`
	// @gotags: json:"apns-collapse-id,omitempty"
	ApnsCollapseId string `protobuf:"bytes,6,opt,name=apns_collapse_id,json=apns-collapse-id,omitempty,proto3" json:"apns-collapse-id,omitempty"`
}

func (x *IosChannel) Reset() {
	*x = IosChannel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IosChannel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IosChannel) ProtoMessage() {}

func (x *IosChannel) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IosChannel.ProtoReflect.Descriptor instead.
func (*IosChannel) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{19}
}

func (x *IosChannel) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *IosChannel) GetAps() *IosChannel_Aps {
	if x != nil {
		return x.Aps
	}
	return nil
}

func (x *IosChannel) GetAutoBadge() string {
	if x != nil {
		return x.AutoBadge
	}
	return ""
}

func (x *IosChannel) GetPayload() string {
	if x != nil {
		return x.Payload
	}
	return ""
}

func (x *IosChannel) GetMultimedia() []*IosChannel_Multimedia {
	if x != nil {
		return x.Multimedia
	}
	return nil
}

func (x *IosChannel) GetApnsCollapseId() string {
	if x != nil {
		return x.ApnsCollapseId
	}
	return ""
}

type AndroidChannel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ups *AndroidChannel_Ups `protobuf:"bytes,1,opt,name=ups,proto3" json:"ups,omitempty"`
}

func (x *AndroidChannel) Reset() {
	*x = AndroidChannel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AndroidChannel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AndroidChannel) ProtoMessage() {}

func (x *AndroidChannel) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AndroidChannel.ProtoReflect.Descriptor instead.
func (*AndroidChannel) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{20}
}

func (x *AndroidChannel) GetUps() *AndroidChannel_Ups {
	if x != nil {
		return x.Ups
	}
	return nil
}

type MiniProgram struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Wx *MiniProgram_WX `protobuf:"bytes,1,opt,name=wx,proto3" json:"wx,omitempty"`
}

func (x *MiniProgram) Reset() {
	*x = MiniProgram{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MiniProgram) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiniProgram) ProtoMessage() {}

func (x *MiniProgram) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiniProgram.ProtoReflect.Descriptor instead.
func (*MiniProgram) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{21}
}

func (x *MiniProgram) GetWx() *MiniProgram_WX {
	if x != nil {
		return x.Wx
	}
	return nil
}

type PushChannel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ios     *IosChannel     `protobuf:"bytes,1,opt,name=ios,proto3" json:"ios,omitempty"`
	Android *AndroidChannel `protobuf:"bytes,2,opt,name=android,proto3" json:"android,omitempty"`
	Mp      *MiniProgram    `protobuf:"bytes,3,opt,name=mp,proto3" json:"mp,omitempty"`
}

func (x *PushChannel) Reset() {
	*x = PushChannel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushChannel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushChannel) ProtoMessage() {}

func (x *PushChannel) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushChannel.ProtoReflect.Descriptor instead.
func (*PushChannel) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{22}
}

func (x *PushChannel) GetIos() *IosChannel {
	if x != nil {
		return x.Ios
	}
	return nil
}

func (x *PushChannel) GetAndroid() *AndroidChannel {
	if x != nil {
		return x.Android
	}
	return nil
}

func (x *PushChannel) GetMp() *MiniProgram {
	if x != nil {
		return x.Mp
	}
	return nil
}

type SingleMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId   string       `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Audience    *Audience    `protobuf:"bytes,2,opt,name=audience,proto3" json:"audience,omitempty"`
	Settings    *Settings    `protobuf:"bytes,3,opt,name=settings,proto3" json:"settings,omitempty"`
	PushMessage *PushMessage `protobuf:"bytes,4,opt,name=push_message,json=pushMessage,proto3" json:"push_message,omitempty"`
	PushChannel *PushChannel `protobuf:"bytes,5,opt,name=push_channel,json=pushChannel,proto3" json:"push_channel,omitempty"`
}

func (x *SingleMsg) Reset() {
	*x = SingleMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SingleMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleMsg) ProtoMessage() {}

func (x *SingleMsg) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingleMsg.ProtoReflect.Descriptor instead.
func (*SingleMsg) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{23}
}

func (x *SingleMsg) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *SingleMsg) GetAudience() *Audience {
	if x != nil {
		return x.Audience
	}
	return nil
}

func (x *SingleMsg) GetSettings() *Settings {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *SingleMsg) GetPushMessage() *PushMessage {
	if x != nil {
		return x.PushMessage
	}
	return nil
}

func (x *SingleMsg) GetPushChannel() *PushChannel {
	if x != nil {
		return x.PushChannel
	}
	return nil
}

type CreateMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId   string       `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	GroupName   string       `protobuf:"bytes,2,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
	Settings    *Settings    `protobuf:"bytes,3,opt,name=settings,proto3" json:"settings,omitempty"`
	PushMessage *PushMessage `protobuf:"bytes,4,opt,name=push_message,json=pushMessage,proto3" json:"push_message,omitempty"`
	PushChannel *PushChannel `protobuf:"bytes,5,opt,name=push_channel,json=pushChannel,proto3" json:"push_channel,omitempty"`
}

func (x *CreateMsg) Reset() {
	*x = CreateMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMsg) ProtoMessage() {}

func (x *CreateMsg) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMsg.ProtoReflect.Descriptor instead.
func (*CreateMsg) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{24}
}

func (x *CreateMsg) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *CreateMsg) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *CreateMsg) GetSettings() *Settings {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *CreateMsg) GetPushMessage() *PushMessage {
	if x != nil {
		return x.PushMessage
	}
	return nil
}

func (x *CreateMsg) GetPushChannel() *PushChannel {
	if x != nil {
		return x.PushChannel
	}
	return nil
}

type ListMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Audience *Audience `protobuf:"bytes,1,opt,name=audience,proto3" json:"audience,omitempty"`
	TaskId   string    `protobuf:"bytes,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
}

func (x *ListMsg) Reset() {
	*x = ListMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMsg) ProtoMessage() {}

func (x *ListMsg) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMsg.ProtoReflect.Descriptor instead.
func (*ListMsg) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{25}
}

func (x *ListMsg) GetAudience() *Audience {
	if x != nil {
		return x.Audience
	}
	return nil
}

func (x *ListMsg) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

type AppMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId   string       `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	GroupName   string       `protobuf:"bytes,2,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
	Audience    *Audience    `protobuf:"bytes,3,opt,name=audience,proto3" json:"audience,omitempty"`
	Settings    *Settings    `protobuf:"bytes,4,opt,name=settings,proto3" json:"settings,omitempty"`
	PushMessage *PushMessage `protobuf:"bytes,5,opt,name=push_message,json=pushMessage,proto3" json:"push_message,omitempty"`
	PushChannel *PushChannel `protobuf:"bytes,6,opt,name=push_channel,json=pushChannel,proto3" json:"push_channel,omitempty"`
}

func (x *AppMsg) Reset() {
	*x = AppMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppMsg) ProtoMessage() {}

func (x *AppMsg) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppMsg.ProtoReflect.Descriptor instead.
func (*AppMsg) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{26}
}

func (x *AppMsg) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *AppMsg) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *AppMsg) GetAudience() *Audience {
	if x != nil {
		return x.Audience
	}
	return nil
}

func (x *AppMsg) GetSettings() *Settings {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *AppMsg) GetPushMessage() *PushMessage {
	if x != nil {
		return x.PushMessage
	}
	return nil
}

func (x *AppMsg) GetPushChannel() *PushChannel {
	if x != nil {
		return x.PushChannel
	}
	return nil
}

type Receipt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId     string            `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	DetailList []*Receipt_Detail `protobuf:"bytes,2,rep,name=detail_list,json=detailList,proto3" json:"detail_list,omitempty"`
}

func (x *Receipt) Reset() {
	*x = Receipt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Receipt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Receipt) ProtoMessage() {}

func (x *Receipt) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Receipt.ProtoReflect.Descriptor instead.
func (*Receipt) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{27}
}

func (x *Receipt) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *Receipt) GetDetailList() []*Receipt_Detail {
	if x != nil {
		return x.DetailList
	}
	return nil
}

type ViewDetailResp_Detail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time  string `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	Event string `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
}

func (x *ViewDetailResp_Detail) Reset() {
	*x = ViewDetailResp_Detail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewDetailResp_Detail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewDetailResp_Detail) ProtoMessage() {}

func (x *ViewDetailResp_Detail) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewDetailResp_Detail.ProtoReflect.Descriptor instead.
func (*ViewDetailResp_Detail) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{15, 0}
}

func (x *ViewDetailResp_Detail) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *ViewDetailResp_Detail) GetEvent() string {
	if x != nil {
		return x.Event
	}
	return ""
}

type Audience_Tag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key     string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Values  []string `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
	OptType string   `protobuf:"bytes,3,opt,name=opt_type,json=optType,proto3" json:"opt_type,omitempty"`
}

func (x *Audience_Tag) Reset() {
	*x = Audience_Tag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Audience_Tag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Audience_Tag) ProtoMessage() {}

func (x *Audience_Tag) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Audience_Tag.ProtoReflect.Descriptor instead.
func (*Audience_Tag) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{16, 0}
}

func (x *Audience_Tag) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Audience_Tag) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *Audience_Tag) GetOptType() string {
	if x != nil {
		return x.OptType
	}
	return ""
}

type Settings_Strategy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Default int32 `protobuf:"varint,1,opt,name=default,proto3" json:"default,omitempty"`
	Ios     int32 `protobuf:"varint,2,opt,name=ios,proto3" json:"ios,omitempty"`
	Hw      int32 `protobuf:"varint,3,opt,name=hw,proto3" json:"hw,omitempty"`
	Ho      int32 `protobuf:"varint,4,opt,name=ho,proto3" json:"ho,omitempty"`
	Xm      int32 `protobuf:"varint,5,opt,name=xm,proto3" json:"xm,omitempty"`
	Xmg     int32 `protobuf:"varint,6,opt,name=xmg,proto3" json:"xmg,omitempty"`
	Vv      int32 `protobuf:"varint,7,opt,name=vv,proto3" json:"vv,omitempty"`
	Op      int32 `protobuf:"varint,8,opt,name=op,proto3" json:"op,omitempty"`
	Opg     int32 `protobuf:"varint,9,opt,name=opg,proto3" json:"opg,omitempty"`
	Mz      int32 `protobuf:"varint,10,opt,name=mz,proto3" json:"mz,omitempty"`
	St      int32 `protobuf:"varint,11,opt,name=st,proto3" json:"st,omitempty"`
	Wx      int32 `protobuf:"varint,12,opt,name=wx,proto3" json:"wx,omitempty"`
}

func (x *Settings_Strategy) Reset() {
	*x = Settings_Strategy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Settings_Strategy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Settings_Strategy) ProtoMessage() {}

func (x *Settings_Strategy) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Settings_Strategy.ProtoReflect.Descriptor instead.
func (*Settings_Strategy) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{17, 0}
}

func (x *Settings_Strategy) GetDefault() int32 {
	if x != nil {
		return x.Default
	}
	return 0
}

func (x *Settings_Strategy) GetIos() int32 {
	if x != nil {
		return x.Ios
	}
	return 0
}

func (x *Settings_Strategy) GetHw() int32 {
	if x != nil {
		return x.Hw
	}
	return 0
}

func (x *Settings_Strategy) GetHo() int32 {
	if x != nil {
		return x.Ho
	}
	return 0
}

func (x *Settings_Strategy) GetXm() int32 {
	if x != nil {
		return x.Xm
	}
	return 0
}

func (x *Settings_Strategy) GetXmg() int32 {
	if x != nil {
		return x.Xmg
	}
	return 0
}

func (x *Settings_Strategy) GetVv() int32 {
	if x != nil {
		return x.Vv
	}
	return 0
}

func (x *Settings_Strategy) GetOp() int32 {
	if x != nil {
		return x.Op
	}
	return 0
}

func (x *Settings_Strategy) GetOpg() int32 {
	if x != nil {
		return x.Opg
	}
	return 0
}

func (x *Settings_Strategy) GetMz() int32 {
	if x != nil {
		return x.Mz
	}
	return 0
}

func (x *Settings_Strategy) GetSt() int32 {
	if x != nil {
		return x.St
	}
	return 0
}

func (x *Settings_Strategy) GetWx() int32 {
	if x != nil {
		return x.Wx
	}
	return 0
}

type PushMessage_Notification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title        string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Body         string `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	BigText      string `protobuf:"bytes,3,opt,name=big_text,json=bigText,proto3" json:"big_text,omitempty"`
	BigImage     string `protobuf:"bytes,4,opt,name=big_image,json=bigImage,proto3" json:"big_image,omitempty"`
	Logo         string `protobuf:"bytes,5,opt,name=logo,proto3" json:"logo,omitempty"`
	LogoUrl      string `protobuf:"bytes,6,opt,name=logo_url,json=logoUrl,proto3" json:"logo_url,omitempty"`
	ChannelId    string `protobuf:"bytes,7,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	ChannelName  string `protobuf:"bytes,8,opt,name=channel_name,json=channelName,proto3" json:"channel_name,omitempty"`
	ChannelLevel string `protobuf:"bytes,9,opt,name=channel_level,json=channelLevel,proto3" json:"channel_level,omitempty"`
	ClickType    string `protobuf:"bytes,10,opt,name=click_type,json=clickType,proto3" json:"click_type,omitempty"`
	Intent       string `protobuf:"bytes,11,opt,name=intent,proto3" json:"intent,omitempty"`
	Url          string `protobuf:"bytes,12,opt,name=url,proto3" json:"url,omitempty"`
	Payload      string `protobuf:"bytes,13,opt,name=payload,proto3" json:"payload,omitempty"`
	NotifyId     int64  `protobuf:"varint,14,opt,name=notify_id,json=notifyId,proto3" json:"notify_id,omitempty"`
	RingName     string `protobuf:"bytes,15,opt,name=ring_name,json=ringName,proto3" json:"ring_name,omitempty"`
	BadgeAddNum  int32  `protobuf:"varint,16,opt,name=badge_add_num,json=badgeAddNum,proto3" json:"badge_add_num,omitempty"`
	ThreadId     string `protobuf:"bytes,17,opt,name=thread_id,json=threadId,proto3" json:"thread_id,omitempty"`
}

func (x *PushMessage_Notification) Reset() {
	*x = PushMessage_Notification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushMessage_Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushMessage_Notification) ProtoMessage() {}

func (x *PushMessage_Notification) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushMessage_Notification.ProtoReflect.Descriptor instead.
func (*PushMessage_Notification) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{18, 0}
}

func (x *PushMessage_Notification) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PushMessage_Notification) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *PushMessage_Notification) GetBigText() string {
	if x != nil {
		return x.BigText
	}
	return ""
}

func (x *PushMessage_Notification) GetBigImage() string {
	if x != nil {
		return x.BigImage
	}
	return ""
}

func (x *PushMessage_Notification) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

func (x *PushMessage_Notification) GetLogoUrl() string {
	if x != nil {
		return x.LogoUrl
	}
	return ""
}

func (x *PushMessage_Notification) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *PushMessage_Notification) GetChannelName() string {
	if x != nil {
		return x.ChannelName
	}
	return ""
}

func (x *PushMessage_Notification) GetChannelLevel() string {
	if x != nil {
		return x.ChannelLevel
	}
	return ""
}

func (x *PushMessage_Notification) GetClickType() string {
	if x != nil {
		return x.ClickType
	}
	return ""
}

func (x *PushMessage_Notification) GetIntent() string {
	if x != nil {
		return x.Intent
	}
	return ""
}

func (x *PushMessage_Notification) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *PushMessage_Notification) GetPayload() string {
	if x != nil {
		return x.Payload
	}
	return ""
}

func (x *PushMessage_Notification) GetNotifyId() int64 {
	if x != nil {
		return x.NotifyId
	}
	return 0
}

func (x *PushMessage_Notification) GetRingName() string {
	if x != nil {
		return x.RingName
	}
	return ""
}

func (x *PushMessage_Notification) GetBadgeAddNum() int32 {
	if x != nil {
		return x.BadgeAddNum
	}
	return 0
}

func (x *PushMessage_Notification) GetThreadId() string {
	if x != nil {
		return x.ThreadId
	}
	return ""
}

type PushMessage_Revoke struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OldTaskId string `protobuf:"bytes,1,opt,name=old_task_id,json=oldTaskId,proto3" json:"old_task_id,omitempty"`
	Force     bool   `protobuf:"varint,2,opt,name=force,proto3" json:"force,omitempty"`
}

func (x *PushMessage_Revoke) Reset() {
	*x = PushMessage_Revoke{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushMessage_Revoke) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushMessage_Revoke) ProtoMessage() {}

func (x *PushMessage_Revoke) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushMessage_Revoke.ProtoReflect.Descriptor instead.
func (*PushMessage_Revoke) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{18, 1}
}

func (x *PushMessage_Revoke) GetOldTaskId() string {
	if x != nil {
		return x.OldTaskId
	}
	return ""
}

func (x *PushMessage_Revoke) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

type IosChannel_Aps struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alert *IosChannel_Aps_Alert `protobuf:"bytes,1,opt,name=alert,proto3" json:"alert,omitempty"`
	// @gotags: json:"content-available,omitempty"
	ContentAvailable int32  `protobuf:"varint,2,opt,name=content_available,json=content-available,proto3" json:"content-available,omitempty"`
	Sound            string `protobuf:"bytes,3,opt,name=sound,proto3" json:"sound,omitempty"`
	Category         string `protobuf:"bytes,4,opt,name=category,proto3" json:"category,omitempty"`
	// @gotags: json:"thread-id,omitempty"
	ThreadId string `protobuf:"bytes,5,opt,name=thread_id,json=thread-id,proto3" json:"thread-id,omitempty"`
}

func (x *IosChannel_Aps) Reset() {
	*x = IosChannel_Aps{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IosChannel_Aps) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IosChannel_Aps) ProtoMessage() {}

func (x *IosChannel_Aps) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IosChannel_Aps.ProtoReflect.Descriptor instead.
func (*IosChannel_Aps) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{19, 0}
}

func (x *IosChannel_Aps) GetAlert() *IosChannel_Aps_Alert {
	if x != nil {
		return x.Alert
	}
	return nil
}

func (x *IosChannel_Aps) GetContentAvailable() int32 {
	if x != nil {
		return x.ContentAvailable
	}
	return 0
}

func (x *IosChannel_Aps) GetSound() string {
	if x != nil {
		return x.Sound
	}
	return ""
}

func (x *IosChannel_Aps) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *IosChannel_Aps) GetThreadId() string {
	if x != nil {
		return x.ThreadId
	}
	return ""
}

type IosChannel_Multimedia struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url      string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Type     int32  `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	OnlyWifi bool   `protobuf:"varint,3,opt,name=only_wifi,json=onlyWifi,proto3" json:"only_wifi,omitempty"`
}

func (x *IosChannel_Multimedia) Reset() {
	*x = IosChannel_Multimedia{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IosChannel_Multimedia) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IosChannel_Multimedia) ProtoMessage() {}

func (x *IosChannel_Multimedia) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IosChannel_Multimedia.ProtoReflect.Descriptor instead.
func (*IosChannel_Multimedia) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{19, 1}
}

func (x *IosChannel_Multimedia) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *IosChannel_Multimedia) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *IosChannel_Multimedia) GetOnlyWifi() bool {
	if x != nil {
		return x.OnlyWifi
	}
	return false
}

type IosChannel_Aps_Alert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Body  string `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	// @gotags: json:"action-loc-key,omitempty"
	ActionLocKey string `protobuf:"bytes,3,opt,name=action_loc_key,json=action-loc-key,proto3" json:"action-loc-key,omitempty"`
	// @gotags: json:"loc-key,omitempty"
	LocKey string `protobuf:"bytes,4,opt,name=loc_key,json=loc-key,proto3" json:"loc-key,omitempty"`
	// @gotags: json:"loc-args,omitempty"
	LocArgs []string `protobuf:"bytes,5,rep,name=loc_args,json=loc-args,proto3" json:"loc-args,omitempty"`
	// @gotags: json:"launch-image,omitempty"
	LaunchImage string `protobuf:"bytes,6,opt,name=launch_image,json=launch-image,proto3" json:"launch-image,omitempty"`
	// @gotags: json:"title-loc-key,omitempty"
	TitleLocKey string `protobuf:"bytes,7,opt,name=title_loc_key,json=title-loc-key,proto3" json:"title-loc-key,omitempty"`
	// @gotags: json:"title-loc-args,omitempty"
	TitleLocArgs []string `protobuf:"bytes,8,rep,name=title_loc_args,json=title-loc-args,proto3" json:"title-loc-args,omitempty"`
	Subtitle     string   `protobuf:"bytes,9,opt,name=subtitle,proto3" json:"subtitle,omitempty"`
	// @gotags: json:"subtitle-loc-key,omitempty"
	SubTitleLocKey string `protobuf:"bytes,10,opt,name=sub_title_loc_key,json=subtitle-loc-key,proto3" json:"subtitle-loc-key,omitempty"`
	// @gotags: json:"subtitle-loc-args,omitempty"
	SubTitleLocArgs []string `protobuf:"bytes,11,rep,name=sub_title_loc_args,json=subtitle-loc-args,proto3" json:"subtitle-loc-args,omitempty"`
}

func (x *IosChannel_Aps_Alert) Reset() {
	*x = IosChannel_Aps_Alert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IosChannel_Aps_Alert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IosChannel_Aps_Alert) ProtoMessage() {}

func (x *IosChannel_Aps_Alert) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IosChannel_Aps_Alert.ProtoReflect.Descriptor instead.
func (*IosChannel_Aps_Alert) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{19, 0, 0}
}

func (x *IosChannel_Aps_Alert) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *IosChannel_Aps_Alert) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *IosChannel_Aps_Alert) GetActionLocKey() string {
	if x != nil {
		return x.ActionLocKey
	}
	return ""
}

func (x *IosChannel_Aps_Alert) GetLocKey() string {
	if x != nil {
		return x.LocKey
	}
	return ""
}

func (x *IosChannel_Aps_Alert) GetLocArgs() []string {
	if x != nil {
		return x.LocArgs
	}
	return nil
}

func (x *IosChannel_Aps_Alert) GetLaunchImage() string {
	if x != nil {
		return x.LaunchImage
	}
	return ""
}

func (x *IosChannel_Aps_Alert) GetTitleLocKey() string {
	if x != nil {
		return x.TitleLocKey
	}
	return ""
}

func (x *IosChannel_Aps_Alert) GetTitleLocArgs() []string {
	if x != nil {
		return x.TitleLocArgs
	}
	return nil
}

func (x *IosChannel_Aps_Alert) GetSubtitle() string {
	if x != nil {
		return x.Subtitle
	}
	return ""
}

func (x *IosChannel_Aps_Alert) GetSubTitleLocKey() string {
	if x != nil {
		return x.SubTitleLocKey
	}
	return ""
}

func (x *IosChannel_Aps_Alert) GetSubTitleLocArgs() []string {
	if x != nil {
		return x.SubTitleLocArgs
	}
	return nil
}

type AndroidChannel_Ups struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Notification *AndroidChannel_Ups_Notification `protobuf:"bytes,1,opt,name=notification,proto3" json:"notification,omitempty"`
	Transmission string                           `protobuf:"bytes,2,opt,name=transmission,proto3" json:"transmission,omitempty"`
	Revoke       *AndroidChannel_Ups_Revoke       `protobuf:"bytes,3,opt,name=revoke,proto3" json:"revoke,omitempty"`
	Options      *AndroidChannel_Ups_Options      `protobuf:"bytes,4,opt,name=options,proto3" json:"options,omitempty"`
}

func (x *AndroidChannel_Ups) Reset() {
	*x = AndroidChannel_Ups{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AndroidChannel_Ups) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AndroidChannel_Ups) ProtoMessage() {}

func (x *AndroidChannel_Ups) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AndroidChannel_Ups.ProtoReflect.Descriptor instead.
func (*AndroidChannel_Ups) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{20, 0}
}

func (x *AndroidChannel_Ups) GetNotification() *AndroidChannel_Ups_Notification {
	if x != nil {
		return x.Notification
	}
	return nil
}

func (x *AndroidChannel_Ups) GetTransmission() string {
	if x != nil {
		return x.Transmission
	}
	return ""
}

func (x *AndroidChannel_Ups) GetRevoke() *AndroidChannel_Ups_Revoke {
	if x != nil {
		return x.Revoke
	}
	return nil
}

func (x *AndroidChannel_Ups) GetOptions() *AndroidChannel_Ups_Options {
	if x != nil {
		return x.Options
	}
	return nil
}

type AndroidChannel_Ups_Notification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title     string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Body      string `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	ClickType string `protobuf:"bytes,3,opt,name=click_type,json=clickType,proto3" json:"click_type,omitempty"`
	Intent    string `protobuf:"bytes,4,opt,name=intent,proto3" json:"intent,omitempty"`
	Url       string `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	NotifyId  int64  `protobuf:"varint,6,opt,name=notify_id,json=notifyId,proto3" json:"notify_id,omitempty"`
}

func (x *AndroidChannel_Ups_Notification) Reset() {
	*x = AndroidChannel_Ups_Notification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AndroidChannel_Ups_Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AndroidChannel_Ups_Notification) ProtoMessage() {}

func (x *AndroidChannel_Ups_Notification) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AndroidChannel_Ups_Notification.ProtoReflect.Descriptor instead.
func (*AndroidChannel_Ups_Notification) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{20, 0, 0}
}

func (x *AndroidChannel_Ups_Notification) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AndroidChannel_Ups_Notification) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *AndroidChannel_Ups_Notification) GetClickType() string {
	if x != nil {
		return x.ClickType
	}
	return ""
}

func (x *AndroidChannel_Ups_Notification) GetIntent() string {
	if x != nil {
		return x.Intent
	}
	return ""
}

func (x *AndroidChannel_Ups_Notification) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *AndroidChannel_Ups_Notification) GetNotifyId() int64 {
	if x != nil {
		return x.NotifyId
	}
	return 0
}

type AndroidChannel_Ups_Revoke struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OldTaskId string `protobuf:"bytes,1,opt,name=old_task_id,json=oldTaskId,proto3" json:"old_task_id,omitempty"`
}

func (x *AndroidChannel_Ups_Revoke) Reset() {
	*x = AndroidChannel_Ups_Revoke{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AndroidChannel_Ups_Revoke) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AndroidChannel_Ups_Revoke) ProtoMessage() {}

func (x *AndroidChannel_Ups_Revoke) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AndroidChannel_Ups_Revoke.ProtoReflect.Descriptor instead.
func (*AndroidChannel_Ups_Revoke) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{20, 0, 1}
}

func (x *AndroidChannel_Ups_Revoke) GetOldTaskId() string {
	if x != nil {
		return x.OldTaskId
	}
	return ""
}

type AndroidChannel_Ups_Options struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: json:"HW,omitempty"
	Hw *AndroidChannel_Ups_Options_HW `protobuf:"bytes,1,opt,name=hw,json=HW,omitempty,proto3" json:"HW,omitempty"`
	// @gotags: json:"XM,omitempty"
	Xm *AndroidChannel_Ups_Options_XM `protobuf:"bytes,2,opt,name=xm,json=XM,omitempty,proto3" json:"XM,omitempty"`
	// @gotags: json:"OP,omitempty"
	Op *AndroidChannel_Ups_Options_OP `protobuf:"bytes,3,opt,name=op,json=OP,omitempty,proto3" json:"OP,omitempty"`
	// @gotags: json:"VV,omitempty"
	Vv *AndroidChannel_Ups_Options_VV `protobuf:"bytes,4,opt,name=vv,json=VV,omitempty,proto3" json:"VV,omitempty"`
	// @gotags: json:"HO,omitempty"
	Ho *AndroidChannel_Ups_Options_HO `protobuf:"bytes,5,opt,name=ho,json=HO,omitempty,proto3" json:"HO,omitempty"`
	// @gotags: json:"XMG,omitempty"
	Xmg *AndroidChannel_Ups_Options_XM `protobuf:"bytes,6,opt,name=xmg,json=XMG,omitempty,proto3" json:"XMG,omitempty"`
	// @gotags: json:"OPG,omitempty"
	Opg *AndroidChannel_Ups_Options_OP `protobuf:"bytes,7,opt,name=opg,json=OPG,omitempty,proto3" json:"OPG,omitempty"`
	// @gotags: json:"UPS,omitempty"
	Ups *AndroidChannel_Ups_Options_UPS `protobuf:"bytes,20,opt,name=ups,json=UPS,omitempty,proto3" json:"UPS,omitempty"`
}

func (x *AndroidChannel_Ups_Options) Reset() {
	*x = AndroidChannel_Ups_Options{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AndroidChannel_Ups_Options) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AndroidChannel_Ups_Options) ProtoMessage() {}

func (x *AndroidChannel_Ups_Options) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AndroidChannel_Ups_Options.ProtoReflect.Descriptor instead.
func (*AndroidChannel_Ups_Options) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{20, 0, 2}
}

func (x *AndroidChannel_Ups_Options) GetHw() *AndroidChannel_Ups_Options_HW {
	if x != nil {
		return x.Hw
	}
	return nil
}

func (x *AndroidChannel_Ups_Options) GetXm() *AndroidChannel_Ups_Options_XM {
	if x != nil {
		return x.Xm
	}
	return nil
}

func (x *AndroidChannel_Ups_Options) GetOp() *AndroidChannel_Ups_Options_OP {
	if x != nil {
		return x.Op
	}
	return nil
}

func (x *AndroidChannel_Ups_Options) GetVv() *AndroidChannel_Ups_Options_VV {
	if x != nil {
		return x.Vv
	}
	return nil
}

func (x *AndroidChannel_Ups_Options) GetHo() *AndroidChannel_Ups_Options_HO {
	if x != nil {
		return x.Ho
	}
	return nil
}

func (x *AndroidChannel_Ups_Options) GetXmg() *AndroidChannel_Ups_Options_XM {
	if x != nil {
		return x.Xmg
	}
	return nil
}

func (x *AndroidChannel_Ups_Options) GetOpg() *AndroidChannel_Ups_Options_OP {
	if x != nil {
		return x.Opg
	}
	return nil
}

func (x *AndroidChannel_Ups_Options) GetUps() *AndroidChannel_Ups_Options_UPS {
	if x != nil {
		return x.Ups
	}
	return nil
}

type AndroidChannel_Ups_Options_HW struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: json:"/message/android/notification/badge/class,omitempty"
	BadgeClass string `protobuf:"bytes,1,opt,name=badge_class,json=/message/android/notification/badge/class,omitempty,proto3" json:"/message/android/notification/badge/class,omitempty"`
	// @gotags: json:"/message/android/notification/badge/add_num,omitempty"
	BadgeAddNum int32 `protobuf:"varint,2,opt,name=badge_add_num,json=/message/android/notification/badge/add_num,omitempty,proto3" json:"/message/android/notification/badge/add_num,omitempty"`
	// @gotags: json:"/message/android/notification/badge/set_num,omitempty"
	BadgeSetNum int32 `protobuf:"varint,3,opt,name=badge_set_num,json=/message/android/notification/badge/set_num,omitempty,proto3" json:"/message/android/notification/badge/set_num,omitempty"`
	// @gotags: json:"/message/android/notification/image,omitempty"
	Image string `protobuf:"bytes,4,opt,name=image,json=/message/android/notification/image,omitempty,proto3" json:"/message/android/notification/image,omitempty"`
	// @gotags: json:"/message/android/notification/style,omitempty"
	Style int32 `protobuf:"varint,5,opt,name=style,json=/message/android/notification/style,omitempty,proto3" json:"/message/android/notification/style,omitempty"`
	// @gotags: json:"/message/android/notification/big_title,omitempty"
	BigTitle string `protobuf:"bytes,6,opt,name=big_title,json=/message/android/notification/big_title,omitempty,proto3" json:"/message/android/notification/big_title,omitempty"`
	// @gotags: json:"/message/android/notification/big_body,omitempty"
	BigBody string `protobuf:"bytes,7,opt,name=big_body,json=/message/android/notification/big_body,omitempty,proto3" json:"/message/android/notification/big_body,omitempty"`
	// @gotags: json:"/message/android/notification/importance,omitempty"
	Importance string `protobuf:"bytes,8,opt,name=importance,json=/message/android/notification/importance,omitempty,proto3" json:"/message/android/notification/importance,omitempty"`
	// @gotags: json:"/message/android/notification/default_sound,omitempty"
	DefaultSound bool `protobuf:"varint,9,opt,name=default_sound,json=/message/android/notification/default_sound,omitempty,proto3" json:"/message/android/notification/default_sound,omitempty"`
	// @gotags: json:"/message/android/notification/channel_id,omitempty"
	ChannelId string `protobuf:"bytes,10,opt,name=channel_id,json=/message/android/notification/channel_id,omitempty,proto3" json:"/message/android/notification/channel_id,omitempty"`
	// @gotags: json:"/message/android/notification/sound,omitempty"
	Sound string `protobuf:"bytes,11,opt,name=sound,json=/message/android/notification/sound,omitempty,proto3" json:"/message/android/notification/sound,omitempty"`
	// @gotags: json:"/message/android/category,omitempty"
	Category string `protobuf:"bytes,12,opt,name=category,json=/message/android/category,omitempty,proto3" json:"/message/android/category,omitempty"`
}

func (x *AndroidChannel_Ups_Options_HW) Reset() {
	*x = AndroidChannel_Ups_Options_HW{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AndroidChannel_Ups_Options_HW) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AndroidChannel_Ups_Options_HW) ProtoMessage() {}

func (x *AndroidChannel_Ups_Options_HW) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AndroidChannel_Ups_Options_HW.ProtoReflect.Descriptor instead.
func (*AndroidChannel_Ups_Options_HW) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{20, 0, 2, 0}
}

func (x *AndroidChannel_Ups_Options_HW) GetBadgeClass() string {
	if x != nil {
		return x.BadgeClass
	}
	return ""
}

func (x *AndroidChannel_Ups_Options_HW) GetBadgeAddNum() int32 {
	if x != nil {
		return x.BadgeAddNum
	}
	return 0
}

func (x *AndroidChannel_Ups_Options_HW) GetBadgeSetNum() int32 {
	if x != nil {
		return x.BadgeSetNum
	}
	return 0
}

func (x *AndroidChannel_Ups_Options_HW) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *AndroidChannel_Ups_Options_HW) GetStyle() int32 {
	if x != nil {
		return x.Style
	}
	return 0
}

func (x *AndroidChannel_Ups_Options_HW) GetBigTitle() string {
	if x != nil {
		return x.BigTitle
	}
	return ""
}

func (x *AndroidChannel_Ups_Options_HW) GetBigBody() string {
	if x != nil {
		return x.BigBody
	}
	return ""
}

func (x *AndroidChannel_Ups_Options_HW) GetImportance() string {
	if x != nil {
		return x.Importance
	}
	return ""
}

func (x *AndroidChannel_Ups_Options_HW) GetDefaultSound() bool {
	if x != nil {
		return x.DefaultSound
	}
	return false
}

func (x *AndroidChannel_Ups_Options_HW) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *AndroidChannel_Ups_Options_HW) GetSound() string {
	if x != nil {
		return x.Sound
	}
	return ""
}

func (x *AndroidChannel_Ups_Options_HW) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

type AndroidChannel_Ups_Options_XM struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: json:"/extra.channel_id,omitempty"
	ChannelId string `protobuf:"bytes,1,opt,name=channel_id,json=/extra.channel_id,omitempty,proto3" json:"/extra.channel_id,omitempty"`
	// @gotags: json:"/extra.notification_style_type,omitempty"
	NotificationStyleType string `protobuf:"bytes,2,opt,name=notification_style_type,json=/extra.notification_style_type,omitempty,proto3" json:"/extra.notification_style_type,omitempty"`
	// @gotags: json "/extra.notification_bigPic_uri,omitempty"
	NotificationBigPicUri string `protobuf:"bytes,3,opt,name=notification_bigPic_uri,json=/extra.notification_bigPic_uri,omitempty,proto3" json:"notification_bigPic_uri,omitempty"`
	// @gotags: json:"/extra.notification_large_icon_uri,omitempty"
	NotificationLargeIconUri string `protobuf:"bytes,4,opt,name=notification_large_icon_uri,json=/extra.notification_large_icon_uri,omitempty,proto3" json:"/extra.notification_large_icon_uri,omitempty"`
	// @gotags: json:"/extra.sound_uri,omitempty"
	SoundUri string `protobuf:"bytes,6,opt,name=sound_uri,json=/extra.sound_uri,omitempty,proto3" json:"/extra.sound_uri,omitempty"`
	// @gotags: json:"/extra.locale,omitempty"
	Locale string `protobuf:"bytes,7,opt,name=locale,json=/extra.locale,omitempty,proto3" json:"/extra.locale,omitempty"`
	// @gotags: json:"/extra.locale_not_in,omitempty"
	LocaleNotIn string `protobuf:"bytes,8,opt,name=locale_not_in,json=/extra.locale_not_in,omitempty,proto3" json:"/extra.locale_not_in,omitempty"`
	// @gotags: json:"/extra.model,omitempty"
	Model string `protobuf:"bytes,9,opt,name=model,json=/extra.model,omitempty,proto3" json:"/extra.model,omitempty"`
	// @gotags: json:"/extra.model_not_in,omitempty"
	ModelNotIn string `protobuf:"bytes,10,opt,name=model_not_in,json=/extra.model_not_in,omitempty,proto3" json:"/extra.model_not_in,omitempty"`
	// @gotags: json:"/extra.app_version,omitempty"
	AppVersion string `protobuf:"bytes,11,opt,name=app_version,json=/extra.app_version,omitempty,proto3" json:"/extra.app_version,omitempty"`
	// @gotags: json:"/extra.app_version_not_in,omitempty"
	AppVersionNotIn string `protobuf:"bytes,12,opt,name=app_version_not_in,json=/extra.app_version_not_in,omitempty,proto3" json:"/extra.app_version_not_in,omitempty"`
	// @gotags: json:"/extra.notification_style_button_left_notify_effect,omitempty"
	StyleButtonLeftNotifyEffect string `protobuf:"bytes,13,opt,name=style_button_left_notify_effect,json=/extra.notification_style_button_left_notify_effect,omitempty,proto3" json:"/extra.notification_style_button_left_notify_effect,omitempty"`
	// @gotags: json:"/extra.notification_style_button_left_name,omitempty"
	StyleButtonLeftName string `protobuf:"bytes,14,opt,name=style_button_left_name,json=/extra.notification_style_button_left_name,omitempty,proto3" json:"/extra.notification_style_button_left_name,omitempty"`
	// @gotags: json:"/extra.notification_style_button_left_intent_uri,omitempty"
	StyleButtonLeftIntentUri string `protobuf:"bytes,15,opt,name=style_button_left_intent_uri,json=/extra.notification_style_button_left_intent_uri,omitempty,proto3" json:"/extra.notification_style_button_left_intent_uri,omitempty"`
	// @gotags: json:"/extra.notification_style_button_left_web_uri,omitempty"
	StyleButtonLeftWebUri string `protobuf:"bytes,16,opt,name=style_button_left_web_uri,json=/extra.notification_style_button_left_web_uri,omitempty,proto3" json:"/extra.notification_style_button_left_web_uri,omitempty"`
	// @gotags: json:"/extra.notification_style_button_left_intent_class,omitempty"
	StyleButtonLeftIntentClass string `protobuf:"bytes,17,opt,name=style_button_left_intent_class,json=/extra.notification_style_button_left_intent_class,omitempty,proto3" json:"/extra.notification_style_button_left_intent_class,omitempty"`
	// @gotags: json:"/extra.notification_style_button_right_notify_effect,omitempty"
	StyleButtonRightNotifyEffect string `protobuf:"bytes,18,opt,name=style_button_right_notify_effect,json=/extra.notification_style_button_right_notify_effect,omitempty,proto3" json:"/extra.notification_style_button_right_notify_effect,omitempty"`
	// @gotags: json:"/extra.notification_style_button_right_name,omitempty"
	StyleButtonRightName string `protobuf:"bytes,19,opt,name=style_button_right_name,json=/extra.notification_style_button_right_name,omitempty,proto3" json:"/extra.notification_style_button_right_name,omitempty"`
	// @gotags: json:"/extra.notification_style_button_right_intent_uri,omitempty"
	StyleButtonRightIntentUri string `protobuf:"bytes,20,opt,name=style_button_right_intent_uri,json=/extra.notification_style_button_right_intent_uri,omitempty,proto3" json:"/extra.notification_style_button_right_intent_uri,omitempty"`
	// @gotags: json:"/extra.notification_style_button_right_web_uri,omitempty"
	StyleButtonRightWebUri string `protobuf:"bytes,21,opt,name=style_button_right_web_uri,json=/extra.notification_style_button_right_web_uri,omitempty,proto3" json:"/extra.notification_style_button_right_web_uri,omitempty"`
	// @gotags: json:"/extra.notification_style_button_right_intent_class,omitempty"
	StyleButtonRightIntentClass string `protobuf:"bytes,22,opt,name=style_button_right_intent_class,json=/extra.notification_style_button_right_intent_class,omitempty,proto3" json:"/extra.notification_style_button_right_intent_class,omitempty"`
	// @gotags: json:"/extra.notification_style_button_mid_notify_effect,omitempty"
	StyleButtonMidNotifyEffect string `protobuf:"bytes,23,opt,name=style_button_mid_notify_effect,json=/extra.notification_style_button_mid_notify_effect,omitempty,proto3" json:"/extra.notification_style_button_mid_notify_effect,omitempty"`
	// @gotags: json:"/extra.notification_style_button_mid_name,omitempty"
	StyleButtonMidName string `protobuf:"bytes,24,opt,name=style_button_mid_name,json=/extra.notification_style_button_mid_name,omitempty,proto3" json:"/extra.notification_style_button_mid_name,omitempty"`
	// @gotags: json:"/extra.notification_style_button_mid_intent_uri,omitempty"
	StyleButtonMidIntentUri string `protobuf:"bytes,25,opt,name=style_button_mid_intent_uri,json=/extra.notification_style_button_mid_intent_uri,omitempty,proto3" json:"/extra.notification_style_button_mid_intent_uri,omitempty"`
	// @gotags: json:"/extra.notification_style_button_mid_web_uri,omitempty"
	StyleButtonMidWebUri string `protobuf:"bytes,26,opt,name=style_button_mid_web_uri,json=/extra.notification_style_button_mid_web_uri,omitempty,proto3" json:"/extra.notification_style_button_mid_web_uri,omitempty"`
	// @gotags: json:"/extra.notification_style_button_mid_intent_class,omitempty"
	StyleButtonMidIntentClass string `protobuf:"bytes,27,opt,name=style_button_mid_intent_class,json=/extra.notification_style_button_mid_intent_class,omitempty,proto3" json:"/extra.notification_style_button_mid_intent_class,omitempty"`
	// @gotags: json:"/time_to_live,omitempty"
	TimeToLive int64 `protobuf:"varint,28,opt,name=time_to_live,json=/time_to_live,omitempty,proto3" json:"/time_to_live,omitempty"`
	// @gotags: json:"/extra.only_send_once,omitempty"
	OnlySendOnce string `protobuf:"bytes,29,opt,name=only_send_once,json=/extra.only_send_once,omitempty,proto3" json:"/extra.only_send_once,omitempty"`
	// @gotags: json:"/time_to_send,omitempty"
	TimeToSend int64 `protobuf:"varint,30,opt,name=time_to_send,json=/time_to_send,omitempty,proto3" json:"/time_to_send,omitempty"`
}

func (x *AndroidChannel_Ups_Options_XM) Reset() {
	*x = AndroidChannel_Ups_Options_XM{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AndroidChannel_Ups_Options_XM) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AndroidChannel_Ups_Options_XM) ProtoMessage() {}

func (x *AndroidChannel_Ups_Options_XM) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AndroidChannel_Ups_Options_XM.ProtoReflect.Descriptor instead.
func (*AndroidChannel_Ups_Options_XM) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{20, 0, 2, 1}
}

func (x *AndroidChannel_Ups_Options_XM) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *AndroidChannel_Ups_Options_XM) GetNotificationStyleType() string {
	if x != nil {
		return x.NotificationStyleType
	}
	return ""
}

func (x *AndroidChannel_Ups_Options_XM) GetNotificationBigPicUri() string {
	if x != nil {
		return x.NotificationBigPicUri
	}
	return ""
}

func (x *AndroidChannel_Ups_Options_XM) GetNotificationLargeIconUri() string {
	if x != nil {
		return x.NotificationLargeIconUri
	}
	return ""
}

func (x *AndroidChannel_Ups_Options_XM) GetSoundUri() string {
	if x != nil {
		return x.SoundUri
	}
	return ""
}

func (x *AndroidChannel_Ups_Options_XM) GetLocale() string {
	if x != nil {
		return x.Locale
	}
	return ""
}

func (x *AndroidChannel_Ups_Options_XM) GetLocaleNotIn() string {
	if x != nil {
		return x.LocaleNotIn
	}
	return ""
}

func (x *AndroidChannel_Ups_Options_XM) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *AndroidChannel_Ups_Options_XM) GetModelNotIn() string {
	if x != nil {
		return x.ModelNotIn
	}
	return ""
}

func (x *AndroidChannel_Ups_Options_XM) GetAppVersion() string {
	if x != nil {
		return x.AppVersion
	}
	return ""
}

func (x *AndroidChannel_Ups_Options_XM) GetAppVersionNotIn() string {
	if x != nil {
		return x.AppVersionNotIn
	}
	return ""
}

func (x *AndroidChannel_Ups_Options_XM) GetStyleButtonLeftNotifyEffect() string {
	if x != nil {
		return x.StyleButtonLeftNotifyEffect
	}
	return ""
}

func (x *AndroidChannel_Ups_Options_XM) GetStyleButtonLeftName() string {
	if x != nil {
		return x.StyleButtonLeftName
	}
	return ""
}

func (x *AndroidChannel_Ups_Options_XM) GetStyleButtonLeftIntentUri() string {
	if x != nil {
		return x.StyleButtonLeftIntentUri
	}
	return ""
}

func (x *AndroidChannel_Ups_Options_XM) GetStyleButtonLeftWebUri() string {
	if x != nil {
		return x.StyleButtonLeftWebUri
	}
	return ""
}

func (x *AndroidChannel_Ups_Options_XM) GetStyleButtonLeftIntentClass() string {
	if x != nil {
		return x.StyleButtonLeftIntentClass
	}
	return ""
}

func (x *AndroidChannel_Ups_Options_XM) GetStyleButtonRightNotifyEffect() string {
	if x != nil {
		return x.StyleButtonRightNotifyEffect
	}
	return ""
}

func (x *AndroidChannel_Ups_Options_XM) GetStyleButtonRightName() string {
	if x != nil {
		return x.StyleButtonRightName
	}
	return ""
}

func (x *AndroidChannel_Ups_Options_XM) GetStyleButtonRightIntentUri() string {
	if x != nil {
		return x.StyleButtonRightIntentUri
	}
	return ""
}

func (x *AndroidChannel_Ups_Options_XM) GetStyleButtonRightWebUri() string {
	if x != nil {
		return x.StyleButtonRightWebUri
	}
	return ""
}

func (x *AndroidChannel_Ups_Options_XM) GetStyleButtonRightIntentClass() string {
	if x != nil {
		return x.StyleButtonRightIntentClass
	}
	return ""
}

func (x *AndroidChannel_Ups_Options_XM) GetStyleButtonMidNotifyEffect() string {
	if x != nil {
		return x.StyleButtonMidNotifyEffect
	}
	return ""
}

func (x *AndroidChannel_Ups_Options_XM) GetStyleButtonMidName() string {
	if x != nil {
		return x.StyleButtonMidName
	}
	return ""
}

func (x *AndroidChannel_Ups_Options_XM) GetStyleButtonMidIntentUri() string {
	if x != nil {
		return x.StyleButtonMidIntentUri
	}
	return ""
}

func (x *AndroidChannel_Ups_Options_XM) GetStyleButtonMidWebUri() string {
	if x != nil {
		return x.StyleButtonMidWebUri
	}
	return ""
}

func (x *AndroidChannel_Ups_Options_XM) GetStyleButtonMidIntentClass() string {
	if x != nil {
		return x.StyleButtonMidIntentClass
	}
	return ""
}

func (x *AndroidChannel_Ups_Options_XM) GetTimeToLive() int64 {
	if x != nil {
		return x.TimeToLive
	}
	return 0
}

func (x *AndroidChannel_Ups_Options_XM) GetOnlySendOnce() string {
	if x != nil {
		return x.OnlySendOnce
	}
	return ""
}

func (x *AndroidChannel_Ups_Options_XM) GetTimeToSend() int64 {
	if x != nil {
		return x.TimeToSend
	}
	return 0
}

type AndroidChannel_Ups_Options_OP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: json:"/channel_id,omitempty"
	ChannelId string `protobuf:"bytes,1,opt,name=channel_id,json=/channel_id,omitempty,proto3" json:"/channel_id,omitempty"`
	// @gotags: json:"/style,omitempty"
	Style int32 `protobuf:"varint,2,opt,name=style,json=/style,omitempty,proto3" json:"/style,omitempty"`
	// @gotags: json:"/small_picture_id,omitempty"
	SmallPictureId string `protobuf:"bytes,3,opt,name=small_picture_id,json=/small_picture_id,omitempty,proto3" json:"/small_picture_id,omitempty"`
	// @gotags: json:"/big_picture_id,omitempty"
	BigPictureId string `protobuf:"bytes,4,opt,name=big_picture_id,json=/big_picture_id,omitempty,proto3" json:"/big_picture_id,omitempty"`
	// @gotags: json:"/app_message_id,omitempty"
	AppMessageId string `protobuf:"bytes,5,opt,name=app_message_id,json=/app_message_id,omitempty,proto3" json:"/app_message_id,omitempty"`
	// @gotags: json:"/show_time_type,omitempty"
	ShowTimeType int32 `protobuf:"varint,6,opt,name=show_time_type,json=/show_time_type,omitempty,proto3" json:"/show_time_type,omitempty"`
	// @gotags: json:"/show_start_time,omitempty"
	ShowStartTime int64 `protobuf:"varint,7,opt,name=show_start_time,json=/show_start_time,omitempty,proto3" json:"/show_start_time,omitempty"`
	// @gotags: json:"/show_end_time,omitempty"
	ShowEndTime int64 `protobuf:"varint,8,opt,name=show_end_time,json=/show_end_time,omitempty,proto3" json:"/show_end_time,omitempty"`
	// @gotags: json:"/off_line,omitempty"
	OffLine bool `protobuf:"varint,9,opt,name=off_line,json=/off_line,omitempty,proto3" json:"/off_line,omitempty"`
	// @gotags: json:"/off_line_ttl,omitempty"
	OffLineTtl int32 `protobuf:"varint,10,opt,name=off_line_ttl,json=/off_line_ttl,omitempty,proto3" json:"/off_line_ttl,omitempty"`
	// @gotags: json:"/show_ttl,omitempty"
	ShowTtl int32 `protobuf:"varint,11,opt,name=show_ttl,json=/show_ttl,omitempty,proto3" json:"/show_ttl,omitempty"`
}

func (x *AndroidChannel_Ups_Options_OP) Reset() {
	*x = AndroidChannel_Ups_Options_OP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AndroidChannel_Ups_Options_OP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AndroidChannel_Ups_Options_OP) ProtoMessage() {}

func (x *AndroidChannel_Ups_Options_OP) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AndroidChannel_Ups_Options_OP.ProtoReflect.Descriptor instead.
func (*AndroidChannel_Ups_Options_OP) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{20, 0, 2, 2}
}

func (x *AndroidChannel_Ups_Options_OP) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *AndroidChannel_Ups_Options_OP) GetStyle() int32 {
	if x != nil {
		return x.Style
	}
	return 0
}

func (x *AndroidChannel_Ups_Options_OP) GetSmallPictureId() string {
	if x != nil {
		return x.SmallPictureId
	}
	return ""
}

func (x *AndroidChannel_Ups_Options_OP) GetBigPictureId() string {
	if x != nil {
		return x.BigPictureId
	}
	return ""
}

func (x *AndroidChannel_Ups_Options_OP) GetAppMessageId() string {
	if x != nil {
		return x.AppMessageId
	}
	return ""
}

func (x *AndroidChannel_Ups_Options_OP) GetShowTimeType() int32 {
	if x != nil {
		return x.ShowTimeType
	}
	return 0
}

func (x *AndroidChannel_Ups_Options_OP) GetShowStartTime() int64 {
	if x != nil {
		return x.ShowStartTime
	}
	return 0
}

func (x *AndroidChannel_Ups_Options_OP) GetShowEndTime() int64 {
	if x != nil {
		return x.ShowEndTime
	}
	return 0
}

func (x *AndroidChannel_Ups_Options_OP) GetOffLine() bool {
	if x != nil {
		return x.OffLine
	}
	return false
}

func (x *AndroidChannel_Ups_Options_OP) GetOffLineTtl() int32 {
	if x != nil {
		return x.OffLineTtl
	}
	return 0
}

func (x *AndroidChannel_Ups_Options_OP) GetShowTtl() int32 {
	if x != nil {
		return x.ShowTtl
	}
	return 0
}

type AndroidChannel_Ups_Options_VV struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: json:"/classification,omitempty"
	Classification int32 `protobuf:"varint,1,opt,name=classification,json=/classification,omitempty,proto3" json:"/classification,omitempty"`
	// @gotags: json:"/notifyType,omitempty"
	NotifyType int32 `protobuf:"varint,2,opt,name=notify_type,json=/notifyType,omitempty,proto3" json:"/notifyType,omitempty"`
	// @gotags: json:"/networkType,omitempty"
	NetworkType int32 `protobuf:"varint,3,opt,name=network_type,json=/networkType,omitempty,proto3" json:"/networkType,omitempty"`
	// @gotags: json:"/timeToLive,omitempty"
	TimeToLive int32 `protobuf:"varint,4,opt,name=time_to_live,json=/timeToLive,omitempty,proto3" json:"/timeToLive,omitempty"`
	// @gotags: json:"/category,omitempty"
	Category string `protobuf:"bytes,5,opt,name=category,json=/category,omitempty,proto3" json:"/category,omitempty"`
}

func (x *AndroidChannel_Ups_Options_VV) Reset() {
	*x = AndroidChannel_Ups_Options_VV{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AndroidChannel_Ups_Options_VV) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AndroidChannel_Ups_Options_VV) ProtoMessage() {}

func (x *AndroidChannel_Ups_Options_VV) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AndroidChannel_Ups_Options_VV.ProtoReflect.Descriptor instead.
func (*AndroidChannel_Ups_Options_VV) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{20, 0, 2, 3}
}

func (x *AndroidChannel_Ups_Options_VV) GetClassification() int32 {
	if x != nil {
		return x.Classification
	}
	return 0
}

func (x *AndroidChannel_Ups_Options_VV) GetNotifyType() int32 {
	if x != nil {
		return x.NotifyType
	}
	return 0
}

func (x *AndroidChannel_Ups_Options_VV) GetNetworkType() int32 {
	if x != nil {
		return x.NetworkType
	}
	return 0
}

func (x *AndroidChannel_Ups_Options_VV) GetTimeToLive() int32 {
	if x != nil {
		return x.TimeToLive
	}
	return 0
}

func (x *AndroidChannel_Ups_Options_VV) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

type AndroidChannel_Ups_Options_HO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: json:"/android/notification/badge/badgeClass,omitempty"
	BadgeClass string `protobuf:"bytes,1,opt,name=badge_class,json=/android/notification/badge/badgeClass,omitempty,proto3" json:"/android/notification/badge/badgeClass,omitempty"`
	// @gotags: json:"/android/notification/badge/addNum,omitempty"
	BadgeAddNum int32 `protobuf:"varint,2,opt,name=badge_add_num,json=/android/notification/badge/addNum,omitempty,proto3" json:"/android/notification/badge/addNum,omitempty"`
	// @gotags: json:"/android/notification/badge/setNum,omitempty"
	BadgeSetNum int32 `protobuf:"varint,3,opt,name=badge_set_num,json=/android/notification/badge/setNum,omitempty,proto3" json:"/android/notification/badge/setNum,omitempty"`
	// @gotags: json:"/android/notification/icon,omitempty"
	Icon string `protobuf:"bytes,4,opt,name=icon,json=/android/notification/icon,omitempty,proto3" json:"/android/notification/icon,omitempty"`
	// @gotags: json:"/android/notification/image,omitempty"
	Image string `protobuf:"bytes,5,opt,name=image,json=/android/notification/image,omitempty,proto3" json:"/android/notification/image,omitempty"`
	// @gotags: json:"/android/notification/style,omitempty"
	Style int32 `protobuf:"varint,6,opt,name=style,json=/android/notification/style,omitempty,proto3" json:"/android/notification/style,omitempty"`
	// @gotags: json:"/android/notification/bigTitle,omitempty"
	BigTitle string `protobuf:"bytes,7,opt,name=big_title,json=/android/notification/bigTitle,omitempty,proto3" json:"/android/notification/bigTitle,omitempty"`
	// @gotags: json:"/android/notification/bigBody,omitempty"
	BigBody string `protobuf:"bytes,8,opt,name=big_body,json=/android/notification/bigBody,omitempty,proto3" json:"/android/notification/bigBody,omitempty"`
	// @gotags: json:"/android/notification/notifySummary,omitempty"
	NotifiySummary string `protobuf:"bytes,9,opt,name=notifiy_summary,json=/android/notification/notifySummary,omitempty,proto3" json:"/android/notification/notifySummary,omitempty"`
	// @gotags: json:"/android/notification/importance,omitempty"
	Importance string `protobuf:"bytes,10,opt,name=importance,json=/android/notification/importance,omitempty,proto3" json:"/android/notification/importance,omitempty"`
	// @gotags: json:"/android/notification/buttons,omitempty"
	Buttons []*AndroidChannel_Ups_Options_HO_Button `protobuf:"bytes,11,rep,name=buttons,json=/android/notification/buttons,omitempty,proto3" json:"/android/notification/buttons,omitempty"`
	// @gotags: json:"/android/notification/when,omitempty"
	When string `protobuf:"bytes,12,opt,name=when,json=/android/notification/when,omitempty,proto3" json:"/android/notification/when,omitempty"`
}

func (x *AndroidChannel_Ups_Options_HO) Reset() {
	*x = AndroidChannel_Ups_Options_HO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AndroidChannel_Ups_Options_HO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AndroidChannel_Ups_Options_HO) ProtoMessage() {}

func (x *AndroidChannel_Ups_Options_HO) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AndroidChannel_Ups_Options_HO.ProtoReflect.Descriptor instead.
func (*AndroidChannel_Ups_Options_HO) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{20, 0, 2, 4}
}

func (x *AndroidChannel_Ups_Options_HO) GetBadgeClass() string {
	if x != nil {
		return x.BadgeClass
	}
	return ""
}

func (x *AndroidChannel_Ups_Options_HO) GetBadgeAddNum() int32 {
	if x != nil {
		return x.BadgeAddNum
	}
	return 0
}

func (x *AndroidChannel_Ups_Options_HO) GetBadgeSetNum() int32 {
	if x != nil {
		return x.BadgeSetNum
	}
	return 0
}

func (x *AndroidChannel_Ups_Options_HO) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *AndroidChannel_Ups_Options_HO) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *AndroidChannel_Ups_Options_HO) GetStyle() int32 {
	if x != nil {
		return x.Style
	}
	return 0
}

func (x *AndroidChannel_Ups_Options_HO) GetBigTitle() string {
	if x != nil {
		return x.BigTitle
	}
	return ""
}

func (x *AndroidChannel_Ups_Options_HO) GetBigBody() string {
	if x != nil {
		return x.BigBody
	}
	return ""
}

func (x *AndroidChannel_Ups_Options_HO) GetNotifiySummary() string {
	if x != nil {
		return x.NotifiySummary
	}
	return ""
}

func (x *AndroidChannel_Ups_Options_HO) GetImportance() string {
	if x != nil {
		return x.Importance
	}
	return ""
}

func (x *AndroidChannel_Ups_Options_HO) GetButtons() []*AndroidChannel_Ups_Options_HO_Button {
	if x != nil {
		return x.Buttons
	}
	return nil
}

func (x *AndroidChannel_Ups_Options_HO) GetWhen() string {
	if x != nil {
		return x.When
	}
	return ""
}

type AndroidChannel_Ups_Options_UPS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: json:"bigText,omitempty"
	BigText string `protobuf:"bytes,1,opt,name=big_text,json=bigText,omitempty,proto3" json:"bigText,omitempty"`
	// @gotags: json:"bigImageUrl,omitempty"
	BigImageUrl string `protobuf:"bytes,2,opt,name=big_image_url,json=bigImageUrl,omitempty,proto3" json:"bigImageUrl,omitempty"`
}

func (x *AndroidChannel_Ups_Options_UPS) Reset() {
	*x = AndroidChannel_Ups_Options_UPS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AndroidChannel_Ups_Options_UPS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AndroidChannel_Ups_Options_UPS) ProtoMessage() {}

func (x *AndroidChannel_Ups_Options_UPS) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AndroidChannel_Ups_Options_UPS.ProtoReflect.Descriptor instead.
func (*AndroidChannel_Ups_Options_UPS) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{20, 0, 2, 5}
}

func (x *AndroidChannel_Ups_Options_UPS) GetBigText() string {
	if x != nil {
		return x.BigText
	}
	return ""
}

func (x *AndroidChannel_Ups_Options_UPS) GetBigImageUrl() string {
	if x != nil {
		return x.BigImageUrl
	}
	return ""
}

type AndroidChannel_Ups_Options_HO_Button struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ActionType int32  `protobuf:"varint,2,opt,name=actionType,proto3" json:"actionType,omitempty"`
	IntentType int32  `protobuf:"varint,3,opt,name=intentType,proto3" json:"intentType,omitempty"`
	Intent     string `protobuf:"bytes,4,opt,name=intent,proto3" json:"intent,omitempty"`
	Data       string `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AndroidChannel_Ups_Options_HO_Button) Reset() {
	*x = AndroidChannel_Ups_Options_HO_Button{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AndroidChannel_Ups_Options_HO_Button) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AndroidChannel_Ups_Options_HO_Button) ProtoMessage() {}

func (x *AndroidChannel_Ups_Options_HO_Button) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AndroidChannel_Ups_Options_HO_Button.ProtoReflect.Descriptor instead.
func (*AndroidChannel_Ups_Options_HO_Button) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{20, 0, 2, 4, 0}
}

func (x *AndroidChannel_Ups_Options_HO_Button) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AndroidChannel_Ups_Options_HO_Button) GetActionType() int32 {
	if x != nil {
		return x.ActionType
	}
	return 0
}

func (x *AndroidChannel_Ups_Options_HO_Button) GetIntentType() int32 {
	if x != nil {
		return x.IntentType
	}
	return 0
}

func (x *AndroidChannel_Ups_Options_HO_Button) GetIntent() string {
	if x != nil {
		return x.Intent
	}
	return ""
}

func (x *AndroidChannel_Ups_Options_HO_Button) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type MiniProgram_WX struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TemplatedId      string            `protobuf:"bytes,1,opt,name=templated_id,json=templatedId,proto3" json:"templated_id,omitempty"`
	Page             string            `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
	MiniprogramState string            `protobuf:"bytes,3,opt,name=miniprogram_state,json=miniprogramState,proto3" json:"miniprogram_state,omitempty"`
	Lang             string            `protobuf:"bytes,4,opt,name=lang,proto3" json:"lang,omitempty"`
	Data             map[string]string `protobuf:"bytes,5,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *MiniProgram_WX) Reset() {
	*x = MiniProgram_WX{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MiniProgram_WX) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiniProgram_WX) ProtoMessage() {}

func (x *MiniProgram_WX) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiniProgram_WX.ProtoReflect.Descriptor instead.
func (*MiniProgram_WX) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{21, 0}
}

func (x *MiniProgram_WX) GetTemplatedId() string {
	if x != nil {
		return x.TemplatedId
	}
	return ""
}

func (x *MiniProgram_WX) GetPage() string {
	if x != nil {
		return x.Page
	}
	return ""
}

func (x *MiniProgram_WX) GetMiniprogramState() string {
	if x != nil {
		return x.MiniprogramState
	}
	return ""
}

func (x *MiniProgram_WX) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *MiniProgram_WX) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

type Receipt_Detail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid    string `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
	Status string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *Receipt_Detail) Reset() {
	*x = Receipt_Detail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_push_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Receipt_Detail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Receipt_Detail) ProtoMessage() {}

func (x *Receipt_Detail) ProtoReflect() protoreflect.Message {
	mi := &file_push_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Receipt_Detail.ProtoReflect.Descriptor instead.
func (*Receipt_Detail) Descriptor() ([]byte, []int) {
	return file_push_proto_rawDescGZIP(), []int{27, 0}
}

func (x *Receipt_Detail) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *Receipt_Detail) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

var File_push_proto protoreflect.FileDescriptor

var file_push_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x70, 0x75, 0x73, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x4f, 0x66,
	0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x22, 0xa0,
	0x01, 0x0a, 0x0f, 0x50, 0x75, 0x73, 0x68, 0x54, 0x6f, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x73, 0x68, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x36,
	0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50,
	0x75, 0x73, 0x68, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4d, 0x73, 0x67, 0x52, 0x07, 0x6d,
	0x73, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x61, 0x73, 0x79,
	0x6e, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x41, 0x73, 0x79, 0x6e,
	0x63, 0x22, 0x50, 0x0a, 0x10, 0x50, 0x75, 0x73, 0x68, 0x54, 0x6f, 0x53, 0x69, 0x6e, 0x67, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x4f, 0x66,
	0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0x7a, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x73, 0x68, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x49, 0x64,
	0x12, 0x2d, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x73, 0x67, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22,
	0x29, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0x93, 0x01, 0x0a, 0x0d, 0x50,
	0x75, 0x73, 0x68, 0x54, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x75, 0x73, 0x68, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x75, 0x73, 0x68, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62,
	0x75, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50,
	0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x73, 0x67,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x61, 0x73, 0x79, 0x6e,
	0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x41, 0x73, 0x79, 0x6e, 0x63,
	0x22, 0x45, 0x0a, 0x0e, 0x50, 0x75, 0x73, 0x68, 0x54, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x33, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73,
	0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x52, 0x07,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x22, 0x76, 0x0a, 0x0c, 0x50, 0x75, 0x73, 0x68, 0x54,
	0x6f, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x73, 0x68, 0x5f,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x73,
	0x68, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x75, 0x6e, 0x64, 0x6c,
	0x65, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50,
	0x75, 0x73, 0x68, 0x2e, 0x41, 0x70, 0x70, 0x4d, 0x73, 0x67, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22,
	0x28, 0x0a, 0x0d, 0x50, 0x75, 0x73, 0x68, 0x54, 0x6f, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0x62, 0x0a, 0x0b, 0x53, 0x74, 0x6f,
	0x70, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x73, 0x68,
	0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75,
	0x73, 0x68, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75, 0x6e, 0x64, 0x6c,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x75, 0x6e, 0x64,
	0x6c, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0x28, 0x0a,
	0x0c, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x64, 0x0a, 0x0d, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x73, 0x68,
	0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75,
	0x73, 0x68, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75, 0x6e, 0x64, 0x6c,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x75, 0x6e, 0x64,
	0x6c, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0x2a, 0x0a,
	0x0e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x63, 0x0a, 0x0c, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x73,
	0x68, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x75, 0x73, 0x68, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75, 0x6e, 0x64,
	0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x75, 0x6e,
	0x64, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0x98,
	0x01, 0x0a, 0x0d, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x31, 0x0a, 0x14, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x75, 0x73, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x70, 0x75, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x76, 0x0a, 0x0d, 0x56, 0x69, 0x65,
	0x77, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75,
	0x73, 0x68, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x75, 0x73, 0x68, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75, 0x6e,
	0x64, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x75,
	0x6e, 0x64, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69,
	0x64, 0x22, 0x8e, 0x01, 0x0a, 0x0e, 0x56, 0x69, 0x65, 0x77, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x0b, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x4f, 0x66, 0x66, 0x6c,
	0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x56, 0x69, 0x65,
	0x77, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x0a, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x32,
	0x0a, 0x06, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x22, 0xd8, 0x01, 0x0a, 0x08, 0x41, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x30, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75,
	0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65,
	0x2e, 0x54, 0x61, 0x67, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x26, 0x0a, 0x0f, 0x66, 0x61, 0x73,
	0x74, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x66, 0x61, 0x73, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x61,
	0x67, 0x1a, 0x4a, 0x0a, 0x03, 0x54, 0x61, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x70, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0xf5, 0x02,
	0x0a, 0x08, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x74,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x74, 0x74, 0x6c, 0x12, 0x3f, 0x0a, 0x08,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73,
	0x68, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x53, 0x74, 0x72, 0x61, 0x74,
	0x65, 0x67, 0x79, 0x52, 0x08, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x70,
	0x65, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x73, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x1a, 0xda, 0x01, 0x0a, 0x08, 0x53, 0x74, 0x72,
	0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x69, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x69, 0x6f,
	0x73, 0x12, 0x0e, 0x0a, 0x02, 0x68, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x68,
	0x77, 0x12, 0x0e, 0x0a, 0x02, 0x68, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x68,
	0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x78, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x78,
	0x6d, 0x12, 0x10, 0x0a, 0x03, 0x78, 0x6d, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x78, 0x6d, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x76, 0x76, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x76, 0x76, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x6f, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x70, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x6f, 0x70, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x6d, 0x7a, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x6d, 0x7a, 0x12, 0x0e, 0x0a, 0x02, 0x73, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x77, 0x78, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x77, 0x78, 0x22, 0x82, 0x06, 0x0a, 0x0b, 0x50, 0x75, 0x73, 0x68, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x4e, 0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e,
	0x65, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x06, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50,
	0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x52, 0x06, 0x72, 0x65, 0x76,
	0x6f, 0x6b, 0x65, 0x1a, 0xe4, 0x03, 0x0a, 0x0c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f,
	0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x19,
	0x0a, 0x08, 0x62, 0x69, 0x67, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x62, 0x69, 0x67, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x69, 0x67,
	0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x69,
	0x67, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f,
	0x67, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f,
	0x67, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x6c, 0x69, 0x63, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x72, 0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x72, 0x69, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x62, 0x61, 0x64,
	0x67, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x62, 0x61, 0x64, 0x67, 0x65, 0x41, 0x64, 0x64, 0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a,
	0x09, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x64, 0x1a, 0x3e, 0x0a, 0x06, 0x52, 0x65,
	0x76, 0x6f, 0x6b, 0x65, 0x12, 0x1e, 0x0a, 0x0b, 0x6f, 0x6c, 0x64, 0x5f, 0x74, 0x61, 0x73, 0x6b,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x6c, 0x64, 0x54, 0x61,
	0x73, 0x6b, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x22, 0x9d, 0x07, 0x0a, 0x0a, 0x49,
	0x6f, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x32, 0x0a,
	0x03, 0x61, 0x70, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x4f, 0x66, 0x66,
	0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x49, 0x6f,
	0x73, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x41, 0x70, 0x73, 0x52, 0x03, 0x61, 0x70,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x62, 0x61, 0x64, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x75, 0x74, 0x6f, 0x42, 0x61, 0x64, 0x67, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x47, 0x0a, 0x0a, 0x6d, 0x75,
	0x6c, 0x74, 0x69, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73,
	0x68, 0x2e, 0x49, 0x6f, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x0a, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x12, 0x34, 0x0a, 0x10, 0x61, 0x70, 0x6e, 0x73, 0x5f, 0x63, 0x6f, 0x6c, 0x6c,
	0x61, 0x70, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1a, 0x61,
	0x70, 0x6e, 0x73, 0x2d, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x70, 0x73, 0x65, 0x2d, 0x69, 0x64, 0x2c,
	0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0xbd, 0x04, 0x0a, 0x03, 0x41, 0x70,
	0x73, 0x12, 0x3c, 0x0a, 0x05, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50,
	0x75, 0x73, 0x68, 0x2e, 0x49, 0x6f, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x41,
	0x70, 0x73, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x05, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x12,
	0x2c, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x2d, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x6f,
	0x75, 0x6e, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x2d, 0x69, 0x64, 0x1a, 0xf9, 0x02,
	0x0a, 0x05, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64,
	0x79, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x6f, 0x63, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2d, 0x6c, 0x6f, 0x63, 0x2d, 0x6b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x6f, 0x63,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x63, 0x2d,
	0x6b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x5f, 0x61, 0x72, 0x67, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x2d, 0x61, 0x72, 0x67, 0x73, 0x12,
	0x22, 0x0a, 0x0c, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x2d, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x6c, 0x6f, 0x63,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x2d, 0x6c, 0x6f, 0x63, 0x2d, 0x6b, 0x65, 0x79, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x5f, 0x61, 0x72, 0x67, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0e, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x2d, 0x6c, 0x6f, 0x63, 0x2d, 0x61, 0x72, 0x67,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x2b, 0x0a,
	0x11, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x2d, 0x6c, 0x6f, 0x63, 0x2d, 0x6b, 0x65, 0x79, 0x12, 0x2d, 0x0a, 0x12, 0x73, 0x75,
	0x62, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x5f, 0x61, 0x72, 0x67, 0x73,
	0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x2d, 0x6c, 0x6f, 0x63, 0x2d, 0x61, 0x72, 0x67, 0x73, 0x1a, 0x4f, 0x0a, 0x0a, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x6f, 0x6e, 0x6c, 0x79, 0x5f, 0x77, 0x69, 0x66, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x6f, 0x6e, 0x6c, 0x79, 0x57, 0x69, 0x66, 0x69, 0x22, 0x82, 0x2f, 0x0a, 0x0e, 0x41,
	0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x36, 0x0a,
	0x03, 0x75, 0x70, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x4f, 0x66, 0x66,
	0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x41, 0x6e,
	0x64, 0x72, 0x6f, 0x69, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x55, 0x70, 0x73,
	0x52, 0x03, 0x75, 0x70, 0x73, 0x1a, 0xb7, 0x2e, 0x0a, 0x03, 0x55, 0x70, 0x73, 0x12, 0x55, 0x0a,
	0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73,
	0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x55, 0x70, 0x73, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x43, 0x0a, 0x06, 0x72, 0x65, 0x76, 0x6f,
	0x6b, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69,
	0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x41, 0x6e, 0x64, 0x72,
	0x6f, 0x69, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x55, 0x70, 0x73, 0x2e, 0x52,
	0x65, 0x76, 0x6f, 0x6b, 0x65, 0x52, 0x06, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x12, 0x46, 0x0a,
	0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c,
	0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73,
	0x68, 0x2e, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x2e, 0x55, 0x70, 0x73, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x9e, 0x01, 0x0a, 0x0c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x62, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x49, 0x64, 0x1a, 0x28, 0x0a, 0x06, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65,
	0x12, 0x1e, 0x0a, 0x0b, 0x6f, 0x6c, 0x64, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x6c, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x64,
	0x1a, 0xdc, 0x2a, 0x0a, 0x07, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x49, 0x0a, 0x02,
	0x68, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69,
	0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x41, 0x6e, 0x64, 0x72,
	0x6f, 0x69, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x55, 0x70, 0x73, 0x2e, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x48, 0x57, 0x52, 0x0c, 0x48, 0x57, 0x2c, 0x6f, 0x6d,
	0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x49, 0x0a, 0x02, 0x78, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73,
	0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x55, 0x70, 0x73, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x58, 0x4d, 0x52, 0x0c, 0x58, 0x4d, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x12, 0x49, 0x0a, 0x02, 0x6f, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f,
	0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73,
	0x68, 0x2e, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x2e, 0x55, 0x70, 0x73, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x50, 0x52,
	0x0c, 0x4f, 0x50, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x49, 0x0a,
	0x02, 0x76, 0x76, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x4f, 0x66, 0x66, 0x6c,
	0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x41, 0x6e, 0x64,
	0x72, 0x6f, 0x69, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x55, 0x70, 0x73, 0x2e,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x56, 0x56, 0x52, 0x0c, 0x56, 0x56, 0x2c, 0x6f,
	0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x49, 0x0a, 0x02, 0x68, 0x6f, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75,
	0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x55, 0x70, 0x73, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x48, 0x4f, 0x52, 0x0c, 0x48, 0x4f, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x4b, 0x0a, 0x03, 0x78, 0x6d, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2f, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50,
	0x75, 0x73, 0x68, 0x2e, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x2e, 0x55, 0x70, 0x73, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x58,
	0x4d, 0x52, 0x0d, 0x58, 0x4d, 0x47, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x12, 0x4b, 0x0a, 0x03, 0x6f, 0x70, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e,
	0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68,
	0x2e, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e,
	0x55, 0x70, 0x73, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x50, 0x52, 0x0d,
	0x4f, 0x50, 0x47, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x4c, 0x0a,
	0x03, 0x75, 0x70, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x4f, 0x66, 0x66,
	0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x41, 0x6e,
	0x64, 0x72, 0x6f, 0x69, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x55, 0x70, 0x73,
	0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x55, 0x50, 0x53, 0x52, 0x0d, 0x55, 0x50,
	0x53, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0xc3, 0x06, 0x0a, 0x02,
	0x48, 0x57, 0x12, 0x48, 0x0a, 0x0b, 0x62, 0x61, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x33, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2f, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x62, 0x61, 0x64, 0x67, 0x65, 0x2f, 0x63, 0x6c, 0x61,
	0x73, 0x73, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x4c, 0x0a, 0x0d,
	0x62, 0x61, 0x64, 0x67, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x35, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x61, 0x6e,
	0x64, 0x72, 0x6f, 0x69, 0x64, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2f, 0x62, 0x61, 0x64, 0x67, 0x65, 0x2f, 0x61, 0x64, 0x64, 0x5f, 0x6e, 0x75, 0x6d,
	0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x4c, 0x0a, 0x0d, 0x62, 0x61,
	0x64, 0x67, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x35, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x61, 0x6e, 0x64, 0x72,
	0x6f, 0x69, 0x64, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2f, 0x62, 0x61, 0x64, 0x67, 0x65, 0x2f, 0x73, 0x65, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x2c, 0x6f,
	0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3c, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x2d, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2f, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x2c, 0x6f, 0x6d, 0x69,
	0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3c, 0x0a, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x2d, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f,
	0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x44, 0x0a, 0x09, 0x62, 0x69, 0x67, 0x5f, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x31, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2f, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x62, 0x69, 0x67, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x42, 0x0a, 0x08, 0x62, 0x69,
	0x67, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x30, 0x2f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2f, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x62, 0x69, 0x67, 0x5f,
	0x62, 0x6f, 0x64, 0x79, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x46,
	0x0a, 0x0a, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x32, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x61, 0x6e, 0x64,
	0x72, 0x6f, 0x69, 0x64, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2f, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2c, 0x6f, 0x6d, 0x69,
	0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x4c, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x5f, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x35, 0x2f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2f,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x46, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x32, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2f, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f,
	0x69, 0x64, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3c, 0x0a, 0x05,
	0x73, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x2d, 0x2f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2f, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x73, 0x6f, 0x75, 0x6e, 0x64,
	0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x35, 0x0a, 0x08, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x23, 0x2f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2f, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0xba, 0x11, 0x0a, 0x02, 0x58, 0x4d, 0x12, 0x2f, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1b, 0x2f, 0x65,
	0x78, 0x74, 0x72, 0x61, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x2c,
	0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x49, 0x0a, 0x17, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x28, 0x2f, 0x65, 0x78, 0x74,
	0x72, 0x61, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x49, 0x0a, 0x17, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x69, 0x67, 0x50, 0x69, 0x63, 0x5f, 0x75, 0x72, 0x69, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x28, 0x2f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x2e, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x69, 0x67, 0x50, 0x69,
	0x63, 0x5f, 0x75, 0x72, 0x69, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x51, 0x0a, 0x1b, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x6c, 0x61, 0x72, 0x67, 0x65, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x2c, 0x2f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x2e, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x61, 0x72, 0x67, 0x65, 0x5f,
	0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x69, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x12, 0x2d, 0x0a, 0x09, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x75, 0x72, 0x69, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1a, 0x2f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x2e, 0x73, 0x6f,
	0x75, 0x6e, 0x64, 0x5f, 0x75, 0x72, 0x69, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x27, 0x0a, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x17, 0x2f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65,
	0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x35, 0x0a, 0x0d, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x5f, 0x69, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x1e, 0x2f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65,
	0x5f, 0x6e, 0x6f, 0x74, 0x5f, 0x69, 0x6e, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x25, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x16, 0x2f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2c, 0x6f,
	0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x33, 0x0a, 0x0c, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x5f, 0x6e, 0x6f, 0x74, 0x5f, 0x69, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1d,
	0x2f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x6e, 0x6f, 0x74,
	0x5f, 0x69, 0x6e, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x31, 0x0a,
	0x0b, 0x61, 0x70, 0x70, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x1c, 0x2f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x2e, 0x61, 0x70, 0x70, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x12, 0x3f, 0x0a, 0x12, 0x61, 0x70, 0x70, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x6e, 0x6f, 0x74, 0x5f, 0x69, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x23, 0x2f, 0x65,
	0x78, 0x74, 0x72, 0x61, 0x2e, 0x61, 0x70, 0x70, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x6e, 0x6f, 0x74, 0x5f, 0x69, 0x6e, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x66, 0x0a, 0x1f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f,
	0x6e, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x65, 0x66,
	0x66, 0x65, 0x63, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x3d, 0x2f, 0x65, 0x78, 0x74,
	0x72, 0x61, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x5f, 0x6c, 0x65, 0x66,
	0x74, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x2c,
	0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x54, 0x0a, 0x16, 0x73, 0x74, 0x79,
	0x6c, 0x65, 0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x34, 0x2f, 0x65, 0x78, 0x74, 0x72,
	0x61, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73,
	0x74, 0x79, 0x6c, 0x65, 0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x5f, 0x6c, 0x65, 0x66, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x60, 0x0a, 0x1c, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x5f,
	0x6c, 0x65, 0x66, 0x74, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x72, 0x69, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x3a, 0x2f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x2e, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65,
	0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x69, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x5f, 0x75, 0x72, 0x69, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x5a, 0x0a, 0x19, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f,
	0x6e, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x77, 0x65, 0x62, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x37, 0x2f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x2e, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f,
	0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x77, 0x65, 0x62, 0x5f,
	0x75, 0x72, 0x69, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x64, 0x0a,
	0x1e, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x5f, 0x6c, 0x65,
	0x66, 0x74, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x3c, 0x2f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x2e, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65,
	0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x69, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x68, 0x0a, 0x20, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x62, 0x75, 0x74,
	0x74, 0x6f, 0x6e, 0x5f, 0x72, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x5f, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x3e, 0x2f,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x5f,
	0x72, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x65, 0x66, 0x66,
	0x65, 0x63, 0x74, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x56, 0x0a,
	0x17, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x5f, 0x72, 0x69,
	0x67, 0x68, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x35,
	0x2f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e,
	0x5f, 0x72, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x2c, 0x6f, 0x6d, 0x69, 0x74,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x62, 0x0a, 0x1d, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x62,
	0x75, 0x74, 0x74, 0x6f, 0x6e, 0x5f, 0x72, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x69, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x3b, 0x2f, 0x65,
	0x78, 0x74, 0x72, 0x61, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x5f, 0x72,
	0x69, 0x67, 0x68, 0x74, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x72, 0x69, 0x2c,
	0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x5c, 0x0a, 0x1a, 0x73, 0x74, 0x79,
	0x6c, 0x65, 0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x5f, 0x72, 0x69, 0x67, 0x68, 0x74, 0x5f,
	0x77, 0x65, 0x62, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x38, 0x2f,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x5f,
	0x72, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x77, 0x65, 0x62, 0x5f, 0x75, 0x72, 0x69, 0x2c, 0x6f, 0x6d,
	0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x66, 0x0a, 0x1f, 0x73, 0x74, 0x79, 0x6c, 0x65,
	0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x5f, 0x72, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x69, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x3d, 0x2f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x62, 0x75, 0x74, 0x74,
	0x6f, 0x6e, 0x5f, 0x72, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x64, 0x0a, 0x1e, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x5f,
	0x6d, 0x69, 0x64, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x65, 0x66, 0x66, 0x65, 0x63,
	0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x3c, 0x2f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x2e,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x79,
	0x6c, 0x65, 0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x5f, 0x6d, 0x69, 0x64, 0x5f, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x5f, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x2c, 0x6f, 0x6d, 0x69, 0x74,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x52, 0x0a, 0x15, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x62,
	0x75, 0x74, 0x74, 0x6f, 0x6e, 0x5f, 0x6d, 0x69, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x18,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x33, 0x2f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x2e, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f,
	0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x5f, 0x6d, 0x69, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x2c,
	0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x5e, 0x0a, 0x1b, 0x73, 0x74, 0x79,
	0x6c, 0x65, 0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x5f, 0x6d, 0x69, 0x64, 0x5f, 0x69, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x39,
	0x2f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e,
	0x5f, 0x6d, 0x69, 0x64, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x72, 0x69, 0x2c,
	0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x58, 0x0a, 0x18, 0x73, 0x74, 0x79,
	0x6c, 0x65, 0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x5f, 0x6d, 0x69, 0x64, 0x5f, 0x77, 0x65,
	0x62, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x36, 0x2f, 0x65, 0x78,
	0x74, 0x72, 0x61, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x5f, 0x6d, 0x69,
	0x64, 0x5f, 0x77, 0x65, 0x62, 0x5f, 0x75, 0x72, 0x69, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x62, 0x0a, 0x1d, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x62, 0x75, 0x74,
	0x74, 0x6f, 0x6e, 0x5f, 0x6d, 0x69, 0x64, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x3b, 0x2f, 0x65, 0x78, 0x74,
	0x72, 0x61, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x5f, 0x6d, 0x69, 0x64,
	0x5f, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2c, 0x6f, 0x6d,
	0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x2d, 0x0a, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x74, 0x6f, 0x5f, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x17, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x6c, 0x69, 0x76, 0x65, 0x2c, 0x6f, 0x6d, 0x69,
	0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x37, 0x0a, 0x0e, 0x6f, 0x6e, 0x6c, 0x79, 0x5f, 0x73,
	0x65, 0x6e, 0x64, 0x5f, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1f,
	0x2f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x2e, 0x6f, 0x6e, 0x6c, 0x79, 0x5f, 0x73, 0x65, 0x6e, 0x64,
	0x5f, 0x6f, 0x6e, 0x63, 0x65, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x2d, 0x0a, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x18,
	0x1e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x17, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x6f, 0x5f,
	0x73, 0x65, 0x6e, 0x64, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x83,
	0x04, 0x0a, 0x02, 0x4f, 0x50, 0x12, 0x29, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x2f, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x12, 0x1f, 0x0a, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x10, 0x2f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x35, 0x0a, 0x10, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x69, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1b, 0x2f, 0x73, 0x6d,
	0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x2c, 0x6f,
	0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x31, 0x0a, 0x0e, 0x62, 0x69, 0x67, 0x5f,
	0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x19, 0x2f, 0x62, 0x69, 0x67, 0x5f, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x69,
	0x64, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x31, 0x0a, 0x0e, 0x61,
	0x70, 0x70, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x19, 0x2f, 0x61, 0x70, 0x70, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x5f, 0x69, 0x64, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x31,
	0x0a, 0x0e, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x19, 0x2f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x33, 0x0a, 0x0f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x1a, 0x2f, 0x73, 0x68, 0x6f,
	0x77, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x2c, 0x6f, 0x6d, 0x69,
	0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x2f, 0x0a, 0x0d, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x65,
	0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x18, 0x2f,
	0x73, 0x68, 0x6f, 0x77, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x2c, 0x6f, 0x6d,
	0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x25, 0x0a, 0x08, 0x6f, 0x66, 0x66, 0x5f, 0x6c,
	0x69, 0x6e, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x2f, 0x6f, 0x66, 0x66, 0x5f,
	0x6c, 0x69, 0x6e, 0x65, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x2d,
	0x0a, 0x0c, 0x6f, 0x66, 0x66, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x74, 0x74, 0x6c, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x17, 0x2f, 0x6f, 0x66, 0x66, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f,
	0x74, 0x74, 0x6c, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x25, 0x0a,
	0x08, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x74, 0x74, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x13, 0x2f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x74, 0x74, 0x6c, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0xe5, 0x01, 0x0a, 0x02, 0x56, 0x56, 0x12, 0x31, 0x0a, 0x0e, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x19, 0x2f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x2a,
	0x0a, 0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x15, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x2c, 0x0a, 0x0c, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x16, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x2c, 0x6f,
	0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x2b, 0x0a, 0x0c, 0x74, 0x69, 0x6d, 0x65,
	0x5f, 0x74, 0x6f, 0x5f, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x15,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x54, 0x6f, 0x4c, 0x69, 0x76, 0x65, 0x2c, 0x6f, 0x6d, 0x69, 0x74,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x25, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x2f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0xa6, 0x07, 0x0a,
	0x02, 0x48, 0x4f, 0x12, 0x45, 0x0a, 0x0b, 0x62, 0x61, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6c, 0x61,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x30, 0x2f, 0x61, 0x6e, 0x64, 0x72, 0x6f,
	0x69, 0x64, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f,
	0x62, 0x61, 0x64, 0x67, 0x65, 0x2f, 0x62, 0x61, 0x64, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x43, 0x0a, 0x0d, 0x62, 0x61,
	0x64, 0x67, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x2c, 0x2f, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2f, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x62, 0x61, 0x64, 0x67, 0x65, 0x2f, 0x61,
	0x64, 0x64, 0x4e, 0x75, 0x6d, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x43, 0x0a, 0x0d, 0x62, 0x61, 0x64, 0x67, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x6e, 0x75, 0x6d,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x2c, 0x2f, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64,
	0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x62, 0x61,
	0x64, 0x67, 0x65, 0x2f, 0x73, 0x65, 0x74, 0x4e, 0x75, 0x6d, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x32, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x24, 0x2f, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2f, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x69, 0x63, 0x6f, 0x6e, 0x2c, 0x6f,
	0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x34, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x25, 0x2f, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69,
	0x64, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x34,
	0x0a, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x25, 0x2f,
	0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x3b, 0x0a, 0x09, 0x62, 0x69, 0x67, 0x5f, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x28, 0x2f, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69,
	0x64, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x62,
	0x69, 0x67, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x39, 0x0a, 0x08, 0x62, 0x69, 0x67, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x27, 0x2f, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2f, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x62, 0x69, 0x67, 0x42, 0x6f,
	0x64, 0x79, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x46, 0x0a, 0x0f,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x79, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x2d, 0x2f, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2f,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x3e, 0x0a, 0x0a, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x2a, 0x2f, 0x61, 0x6e, 0x64, 0x72, 0x6f,
	0x69, 0x64, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f,
	0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x70, 0x0a, 0x07, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x73, 0x18,
	0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50,
	0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x55, 0x70, 0x73, 0x2e, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x48, 0x4f, 0x2e, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x52, 0x27, 0x2f,
	0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x73, 0x2c, 0x6f, 0x6d, 0x69,
	0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x32, 0x0a, 0x04, 0x77, 0x68, 0x65, 0x6e, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x24, 0x2f, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2f, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x77, 0x68, 0x65, 0x6e,
	0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x88, 0x01, 0x0a, 0x06, 0x42,
	0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x69,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x58, 0x0a, 0x03, 0x55, 0x50, 0x53, 0x12, 0x23, 0x0a, 0x08,
	0x62, 0x69, 0x67, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x62, 0x69, 0x67, 0x54, 0x65, 0x78, 0x74, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x2c, 0x0a, 0x0d, 0x62, 0x69, 0x67, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x62, 0x69, 0x67, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x55, 0x72, 0x6c, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0xb7, 0x02, 0x0a, 0x0b, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x12,
	0x30, 0x0a, 0x02, 0x77, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x4f, 0x66,
	0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x4d,
	0x69, 0x6e, 0x69, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x2e, 0x57, 0x58, 0x52, 0x02, 0x77,
	0x78, 0x1a, 0xf5, 0x01, 0x0a, 0x02, 0x57, 0x58, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x2b, 0x0a, 0x11, 0x6d, 0x69, 0x6e, 0x69, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6d, 0x69, 0x6e, 0x69,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6c, 0x61, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67,
	0x12, 0x3e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73,
	0x68, 0x2e, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x2e, 0x57, 0x58,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x1a, 0x37, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xa8, 0x01, 0x0a, 0x0b, 0x50, 0x75,
	0x73, 0x68, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x2e, 0x0a, 0x03, 0x69, 0x6f, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65,
	0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x49, 0x6f, 0x73, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x03, 0x69, 0x6f, 0x73, 0x12, 0x3a, 0x0a, 0x07, 0x61, 0x6e, 0x64,
	0x72, 0x6f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x4f, 0x66, 0x66,
	0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x41, 0x6e,
	0x64, 0x72, 0x6f, 0x69, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x07, 0x61, 0x6e,
	0x64, 0x72, 0x6f, 0x69, 0x64, 0x12, 0x2d, 0x0a, 0x02, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x2e,
	0x50, 0x75, 0x73, 0x68, 0x2e, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x52, 0x02, 0x6d, 0x70, 0x22, 0x9e, 0x02, 0x0a, 0x09, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4d,
	0x73, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x64, 0x12, 0x36, 0x0a, 0x08, 0x61, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73,
	0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x52,
	0x08, 0x61, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x4f, 0x66,
	0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x12, 0x40, 0x0a, 0x0c, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e,
	0x65, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0b, 0x70, 0x75, 0x73, 0x68, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x40, 0x0a, 0x0c, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x4f, 0x66, 0x66, 0x6c,
	0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73,
	0x68, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x0b, 0x70, 0x75, 0x73, 0x68, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x22, 0x85, 0x02, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4d, 0x73, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x36, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73,
	0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52,
	0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x40, 0x0a, 0x0c, 0x70, 0x75, 0x73,
	0x68, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75,
	0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0b,
	0x70, 0x75, 0x73, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x40, 0x0a, 0x0c, 0x70,
	0x75, 0x73, 0x68, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x2e,
	0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x52, 0x0b, 0x70, 0x75, 0x73, 0x68, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x22, 0x5a, 0x0a,
	0x07, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x36, 0x0a, 0x08, 0x61, 0x75, 0x64, 0x69,
	0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x4f, 0x66, 0x66,
	0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x41, 0x75,
	0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x08, 0x61, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0xba, 0x02, 0x0a, 0x06, 0x41, 0x70,
	0x70, 0x4d, 0x73, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x61, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75,
	0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65,
	0x52, 0x08, 0x61, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x4f,
	0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x12, 0x40, 0x0a, 0x0c, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69,
	0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0b, 0x70, 0x75, 0x73, 0x68, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x40, 0x0a, 0x0c, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x4f, 0x66, 0x66,
	0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75,
	0x73, 0x68, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x0b, 0x70, 0x75, 0x73, 0x68, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x22, 0x99, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x70, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x41, 0x0a, 0x0b, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50,
	0x75, 0x73, 0x68, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x2e, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x0a, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x32,
	0x0a, 0x06, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x32, 0x98, 0x05, 0x0a, 0x04, 0x50, 0x75, 0x73, 0x68, 0x12, 0x57, 0x0a, 0x0c, 0x50,
	0x75, 0x73, 0x68, 0x54, 0x6f, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x12, 0x21, 0x2e, 0x4f, 0x66,
	0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50,
	0x75, 0x73, 0x68, 0x54, 0x6f, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x22,
	0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73,
	0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x54, 0x6f, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61,
	0x73, 0x6b, 0x12, 0x1f, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68,
	0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b,
	0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73,
	0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x0a, 0x50, 0x75, 0x73, 0x68, 0x54,
	0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50,
	0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x54, 0x6f, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65,
	0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x54, 0x6f,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x09, 0x50, 0x75,
	0x73, 0x68, 0x54, 0x6f, 0x41, 0x70, 0x70, 0x12, 0x1e, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e,
	0x65, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x54,
	0x6f, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e,
	0x65, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x54,
	0x6f, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x08, 0x53, 0x74,
	0x6f, 0x70, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x1d, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65,
	0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50,
	0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x0a, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x1f, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50,
	0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65,
	0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x09, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x1e, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e,
	0x65, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e,
	0x65, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x0a, 0x56, 0x69,
	0x65, 0x77, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1f, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69,
	0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x56, 0x69, 0x65, 0x77,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x4f, 0x66, 0x66, 0x6c,
	0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x56, 0x69, 0x65,
	0x77, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x42, 0x09, 0x5a,
	0x07, 0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_push_proto_rawDescOnce sync.Once
	file_push_proto_rawDescData = file_push_proto_rawDesc
)

func file_push_proto_rawDescGZIP() []byte {
	file_push_proto_rawDescOnce.Do(func() {
		file_push_proto_rawDescData = protoimpl.X.CompressGZIP(file_push_proto_rawDescData)
	})
	return file_push_proto_rawDescData
}

var file_push_proto_msgTypes = make([]protoimpl.MessageInfo, 50)
var file_push_proto_goTypes = []interface{}{
	(*PushToSingleReq)(nil),                      // 0: OfflinePush.Push.PushToSingleReq
	(*PushToSingleResp)(nil),                     // 1: OfflinePush.Push.PushToSingleResp
	(*CreateTaskReq)(nil),                        // 2: OfflinePush.Push.CreateTaskReq
	(*CreateTaskResp)(nil),                       // 3: OfflinePush.Push.CreateTaskResp
	(*PushToListReq)(nil),                        // 4: OfflinePush.Push.PushToListReq
	(*PushToListResp)(nil),                       // 5: OfflinePush.Push.PushToListResp
	(*PushToAppReq)(nil),                         // 6: OfflinePush.Push.PushToAppReq
	(*PushToAppResp)(nil),                        // 7: OfflinePush.Push.PushToAppResp
	(*StopTaskReq)(nil),                          // 8: OfflinePush.Push.StopTaskReq
	(*StopTaskResp)(nil),                         // 9: OfflinePush.Push.StopTaskResp
	(*RemoveTaskReq)(nil),                        // 10: OfflinePush.Push.RemoveTaskReq
	(*RemoveTaskResp)(nil),                       // 11: OfflinePush.Push.RemoveTaskResp
	(*CheckTaskReq)(nil),                         // 12: OfflinePush.Push.CheckTaskReq
	(*CheckTaskResp)(nil),                        // 13: OfflinePush.Push.CheckTaskResp
	(*ViewDetailReq)(nil),                        // 14: OfflinePush.Push.ViewDetailReq
	(*ViewDetailResp)(nil),                       // 15: OfflinePush.Push.ViewDetailResp
	(*Audience)(nil),                             // 16: OfflinePush.Push.Audience
	(*Settings)(nil),                             // 17: OfflinePush.Push.Settings
	(*PushMessage)(nil),                          // 18: OfflinePush.Push.PushMessage
	(*IosChannel)(nil),                           // 19: OfflinePush.Push.IosChannel
	(*AndroidChannel)(nil),                       // 20: OfflinePush.Push.AndroidChannel
	(*MiniProgram)(nil),                          // 21: OfflinePush.Push.MiniProgram
	(*PushChannel)(nil),                          // 22: OfflinePush.Push.PushChannel
	(*SingleMsg)(nil),                            // 23: OfflinePush.Push.SingleMsg
	(*CreateMsg)(nil),                            // 24: OfflinePush.Push.CreateMsg
	(*ListMsg)(nil),                              // 25: OfflinePush.Push.ListMsg
	(*AppMsg)(nil),                               // 26: OfflinePush.Push.AppMsg
	(*Receipt)(nil),                              // 27: OfflinePush.Push.Receipt
	(*ViewDetailResp_Detail)(nil),                // 28: OfflinePush.Push.ViewDetailResp.Detail
	(*Audience_Tag)(nil),                         // 29: OfflinePush.Push.Audience.Tag
	(*Settings_Strategy)(nil),                    // 30: OfflinePush.Push.Settings.Strategy
	(*PushMessage_Notification)(nil),             // 31: OfflinePush.Push.PushMessage.Notification
	(*PushMessage_Revoke)(nil),                   // 32: OfflinePush.Push.PushMessage.Revoke
	(*IosChannel_Aps)(nil),                       // 33: OfflinePush.Push.IosChannel.Aps
	(*IosChannel_Multimedia)(nil),                // 34: OfflinePush.Push.IosChannel.Multimedia
	(*IosChannel_Aps_Alert)(nil),                 // 35: OfflinePush.Push.IosChannel.Aps.Alert
	(*AndroidChannel_Ups)(nil),                   // 36: OfflinePush.Push.AndroidChannel.Ups
	(*AndroidChannel_Ups_Notification)(nil),      // 37: OfflinePush.Push.AndroidChannel.Ups.Notification
	(*AndroidChannel_Ups_Revoke)(nil),            // 38: OfflinePush.Push.AndroidChannel.Ups.Revoke
	(*AndroidChannel_Ups_Options)(nil),           // 39: OfflinePush.Push.AndroidChannel.Ups.Options
	(*AndroidChannel_Ups_Options_HW)(nil),        // 40: OfflinePush.Push.AndroidChannel.Ups.Options.HW
	(*AndroidChannel_Ups_Options_XM)(nil),        // 41: OfflinePush.Push.AndroidChannel.Ups.Options.XM
	(*AndroidChannel_Ups_Options_OP)(nil),        // 42: OfflinePush.Push.AndroidChannel.Ups.Options.OP
	(*AndroidChannel_Ups_Options_VV)(nil),        // 43: OfflinePush.Push.AndroidChannel.Ups.Options.VV
	(*AndroidChannel_Ups_Options_HO)(nil),        // 44: OfflinePush.Push.AndroidChannel.Ups.Options.HO
	(*AndroidChannel_Ups_Options_UPS)(nil),       // 45: OfflinePush.Push.AndroidChannel.Ups.Options.UPS
	(*AndroidChannel_Ups_Options_HO_Button)(nil), // 46: OfflinePush.Push.AndroidChannel.Ups.Options.HO.Button
	(*MiniProgram_WX)(nil),                       // 47: OfflinePush.Push.MiniProgram.WX
	nil,                                          // 48: OfflinePush.Push.MiniProgram.WX.DataEntry
	(*Receipt_Detail)(nil),                       // 49: OfflinePush.Push.Receipt.Detail
}
var file_push_proto_depIdxs = []int32{
	23, // 0: OfflinePush.Push.PushToSingleReq.msg_list:type_name -> OfflinePush.Push.SingleMsg
	27, // 1: OfflinePush.Push.PushToSingleResp.receipt_list:type_name -> OfflinePush.Push.Receipt
	24, // 2: OfflinePush.Push.CreateTaskReq.msg:type_name -> OfflinePush.Push.CreateMsg
	25, // 3: OfflinePush.Push.PushToListReq.msg:type_name -> OfflinePush.Push.ListMsg
	27, // 4: OfflinePush.Push.PushToListResp.receipt:type_name -> OfflinePush.Push.Receipt
	26, // 5: OfflinePush.Push.PushToAppReq.msg:type_name -> OfflinePush.Push.AppMsg
	28, // 6: OfflinePush.Push.ViewDetailResp.detail_list:type_name -> OfflinePush.Push.ViewDetailResp.Detail
	29, // 7: OfflinePush.Push.Audience.tag:type_name -> OfflinePush.Push.Audience.Tag
	30, // 8: OfflinePush.Push.Settings.strategy:type_name -> OfflinePush.Push.Settings.Strategy
	31, // 9: OfflinePush.Push.PushMessage.notification:type_name -> OfflinePush.Push.PushMessage.Notification
	32, // 10: OfflinePush.Push.PushMessage.revoke:type_name -> OfflinePush.Push.PushMessage.Revoke
	33, // 11: OfflinePush.Push.IosChannel.aps:type_name -> OfflinePush.Push.IosChannel.Aps
	34, // 12: OfflinePush.Push.IosChannel.multimedia:type_name -> OfflinePush.Push.IosChannel.Multimedia
	36, // 13: OfflinePush.Push.AndroidChannel.ups:type_name -> OfflinePush.Push.AndroidChannel.Ups
	47, // 14: OfflinePush.Push.MiniProgram.wx:type_name -> OfflinePush.Push.MiniProgram.WX
	19, // 15: OfflinePush.Push.PushChannel.ios:type_name -> OfflinePush.Push.IosChannel
	20, // 16: OfflinePush.Push.PushChannel.android:type_name -> OfflinePush.Push.AndroidChannel
	21, // 17: OfflinePush.Push.PushChannel.mp:type_name -> OfflinePush.Push.MiniProgram
	16, // 18: OfflinePush.Push.SingleMsg.audience:type_name -> OfflinePush.Push.Audience
	17, // 19: OfflinePush.Push.SingleMsg.settings:type_name -> OfflinePush.Push.Settings
	18, // 20: OfflinePush.Push.SingleMsg.push_message:type_name -> OfflinePush.Push.PushMessage
	22, // 21: OfflinePush.Push.SingleMsg.push_channel:type_name -> OfflinePush.Push.PushChannel
	17, // 22: OfflinePush.Push.CreateMsg.settings:type_name -> OfflinePush.Push.Settings
	18, // 23: OfflinePush.Push.CreateMsg.push_message:type_name -> OfflinePush.Push.PushMessage
	22, // 24: OfflinePush.Push.CreateMsg.push_channel:type_name -> OfflinePush.Push.PushChannel
	16, // 25: OfflinePush.Push.ListMsg.audience:type_name -> OfflinePush.Push.Audience
	16, // 26: OfflinePush.Push.AppMsg.audience:type_name -> OfflinePush.Push.Audience
	17, // 27: OfflinePush.Push.AppMsg.settings:type_name -> OfflinePush.Push.Settings
	18, // 28: OfflinePush.Push.AppMsg.push_message:type_name -> OfflinePush.Push.PushMessage
	22, // 29: OfflinePush.Push.AppMsg.push_channel:type_name -> OfflinePush.Push.PushChannel
	49, // 30: OfflinePush.Push.Receipt.detail_list:type_name -> OfflinePush.Push.Receipt.Detail
	35, // 31: OfflinePush.Push.IosChannel.Aps.alert:type_name -> OfflinePush.Push.IosChannel.Aps.Alert
	37, // 32: OfflinePush.Push.AndroidChannel.Ups.notification:type_name -> OfflinePush.Push.AndroidChannel.Ups.Notification
	38, // 33: OfflinePush.Push.AndroidChannel.Ups.revoke:type_name -> OfflinePush.Push.AndroidChannel.Ups.Revoke
	39, // 34: OfflinePush.Push.AndroidChannel.Ups.options:type_name -> OfflinePush.Push.AndroidChannel.Ups.Options
	40, // 35: OfflinePush.Push.AndroidChannel.Ups.Options.hw:type_name -> OfflinePush.Push.AndroidChannel.Ups.Options.HW
	41, // 36: OfflinePush.Push.AndroidChannel.Ups.Options.xm:type_name -> OfflinePush.Push.AndroidChannel.Ups.Options.XM
	42, // 37: OfflinePush.Push.AndroidChannel.Ups.Options.op:type_name -> OfflinePush.Push.AndroidChannel.Ups.Options.OP
	43, // 38: OfflinePush.Push.AndroidChannel.Ups.Options.vv:type_name -> OfflinePush.Push.AndroidChannel.Ups.Options.VV
	44, // 39: OfflinePush.Push.AndroidChannel.Ups.Options.ho:type_name -> OfflinePush.Push.AndroidChannel.Ups.Options.HO
	41, // 40: OfflinePush.Push.AndroidChannel.Ups.Options.xmg:type_name -> OfflinePush.Push.AndroidChannel.Ups.Options.XM
	42, // 41: OfflinePush.Push.AndroidChannel.Ups.Options.opg:type_name -> OfflinePush.Push.AndroidChannel.Ups.Options.OP
	45, // 42: OfflinePush.Push.AndroidChannel.Ups.Options.ups:type_name -> OfflinePush.Push.AndroidChannel.Ups.Options.UPS
	46, // 43: OfflinePush.Push.AndroidChannel.Ups.Options.HO.buttons:type_name -> OfflinePush.Push.AndroidChannel.Ups.Options.HO.Button
	48, // 44: OfflinePush.Push.MiniProgram.WX.data:type_name -> OfflinePush.Push.MiniProgram.WX.DataEntry
	0,  // 45: OfflinePush.Push.Push.PushToSingle:input_type -> OfflinePush.Push.PushToSingleReq
	2,  // 46: OfflinePush.Push.Push.CreateTask:input_type -> OfflinePush.Push.CreateTaskReq
	4,  // 47: OfflinePush.Push.Push.PushToList:input_type -> OfflinePush.Push.PushToListReq
	6,  // 48: OfflinePush.Push.Push.PushToApp:input_type -> OfflinePush.Push.PushToAppReq
	8,  // 49: OfflinePush.Push.Push.StopTask:input_type -> OfflinePush.Push.StopTaskReq
	10, // 50: OfflinePush.Push.Push.RemoveTask:input_type -> OfflinePush.Push.RemoveTaskReq
	12, // 51: OfflinePush.Push.Push.CheckTask:input_type -> OfflinePush.Push.CheckTaskReq
	14, // 52: OfflinePush.Push.Push.ViewDetail:input_type -> OfflinePush.Push.ViewDetailReq
	1,  // 53: OfflinePush.Push.Push.PushToSingle:output_type -> OfflinePush.Push.PushToSingleResp
	3,  // 54: OfflinePush.Push.Push.CreateTask:output_type -> OfflinePush.Push.CreateTaskResp
	5,  // 55: OfflinePush.Push.Push.PushToList:output_type -> OfflinePush.Push.PushToListResp
	7,  // 56: OfflinePush.Push.Push.PushToApp:output_type -> OfflinePush.Push.PushToAppResp
	9,  // 57: OfflinePush.Push.Push.StopTask:output_type -> OfflinePush.Push.StopTaskResp
	11, // 58: OfflinePush.Push.Push.RemoveTask:output_type -> OfflinePush.Push.RemoveTaskResp
	13, // 59: OfflinePush.Push.Push.CheckTask:output_type -> OfflinePush.Push.CheckTaskResp
	15, // 60: OfflinePush.Push.Push.ViewDetail:output_type -> OfflinePush.Push.ViewDetailResp
	53, // [53:61] is the sub-list for method output_type
	45, // [45:53] is the sub-list for method input_type
	45, // [45:45] is the sub-list for extension type_name
	45, // [45:45] is the sub-list for extension extendee
	0,  // [0:45] is the sub-list for field type_name
}

func init() { file_push_proto_init() }
func file_push_proto_init() {
	if File_push_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_push_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushToSingleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushToSingleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTaskReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTaskResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushToListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushToListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushToAppReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushToAppResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopTaskReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopTaskResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveTaskReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveTaskResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckTaskReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckTaskResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Audience); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Settings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IosChannel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AndroidChannel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MiniProgram); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushChannel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SingleMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Receipt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewDetailResp_Detail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Audience_Tag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Settings_Strategy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushMessage_Notification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushMessage_Revoke); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IosChannel_Aps); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IosChannel_Multimedia); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IosChannel_Aps_Alert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AndroidChannel_Ups); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AndroidChannel_Ups_Notification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AndroidChannel_Ups_Revoke); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AndroidChannel_Ups_Options); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AndroidChannel_Ups_Options_HW); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AndroidChannel_Ups_Options_XM); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AndroidChannel_Ups_Options_OP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AndroidChannel_Ups_Options_VV); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AndroidChannel_Ups_Options_HO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AndroidChannel_Ups_Options_UPS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AndroidChannel_Ups_Options_HO_Button); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MiniProgram_WX); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_push_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Receipt_Detail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_push_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   50,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_push_proto_goTypes,
		DependencyIndexes: file_push_proto_depIdxs,
		MessageInfos:      file_push_proto_msgTypes,
	}.Build()
	File_push_proto = out.File
	file_push_proto_rawDesc = nil
	file_push_proto_goTypes = nil
	file_push_proto_depIdxs = nil
}
